"id_calas","Cod_Viaje_VMS",
"Date", "mistake","dist_costa")
##
##
data_scaled <- cbind(data[,covariables],data_scaled)
head(data[,covariables])
head(data[,covariables[1:5]])
covariables <- c("Name_Vessel","Cod_Barco","Lon","Lat","Puerto_0_Mar_1","Dist_Emisiones","Dif_Tiempo",
"id_calas","Cod_Viaje_VMS",
"Date", "mistake","dist_costa")
head(data[,covariables[1:5]])
head(data[,covariables[1:2]])
head(data)
head(data[,1:2])
head(data[,covariables[1:2]])
head(data[,covariables[c(1:2)]])
head(data[,covariables[c(1,2)]])
covariables[c(1,2)]
head(data[,covariables[1]])
head(data[,c(covariables[1])])
head(data[,c("Name_Vessel")])
head(data[,"Name_Vessel"])
names(data)
covariables <- c("Name_vessel","Cod_Barco","Lon","Lat","Puerto_0_Mar_1","Dist_Emisiones","Dif_Tiempo",
"id_calas","Cod_Viaje_VMS",
"Date", "mistake","dist_costa")
##
data_scaled <- cbind(data[,covariables],data_scaled)
head(data_scaled)
predichas <- matrix(NA,nrow=dim(data_scaled)[1],ncol=loops)
for (ii in 1:loops){
namefile = system.file("result_nnet", paste0("ann_year_loop_",ii,"_neurons_4.RData"),package = "tasaR")
#namefile = paste0(directory,"/result_nnet/ann_year_loop_",ii,"_neurons_",neurons)
#load(file = paste0(namefile, ".RData"))
load(namefile)
predicted <- predict(best.net,data_scaled)
predichas[,ii] <- predicted[,2]
}
sets <- as.numeric(apply(predichas,1,mean) > thres)
data0$id_calas[-c(ind_change_speed_1,ind_change_speed_2)] <- sets
posiciones_cala
posiciones_cala
#output <- posiciones_cala(data0)
#predict_sets <- data0$Cala
#id_viajes$Cod_Barco_trip <- paste0(data0$Cod_Barco, "_",data0$trip)
data0 <- posiciones_cala(data0)
data0$id_calas[-c(ind_change_speed_1,ind_change_speed_2)] <- sets
#output <- posiciones_cala(data0)
#predict_sets <- data0$Cala
#id_viajes$Cod_Barco_trip <- paste0(data0$Cod_Barco, "_",data0$trip)
data0 <- posiciones_cala(data0)
#output <- posiciones_cala(data0)
#predict_sets <- data0$Cala
#id_viajes$Cod_Barco_trip <- paste0(data0$Cod_Barco, "_",data0$trip)
data0 <- posiciones_cala(data = data0)
dim(data0)
posiciones_cala <- function(data){
data$ncalas <- 0
#data$calas  <- 0
data$Lon_calas <- NA
data$Lat_calas <- NA
data$calas[is.na(data$calas)] <- 0 # observar NAs
id_calas <- lapply(split(data, data$trip, drop = TRUE), function(x){
if(sum(x$calas) > 0){
ncalas   <-  1:(length(which(diff(which(x$calas == 1)) > 1)) + 1)
x$ncalas[x$calas == 1] <- rep(ncalas , diff(which(x$calas == 0))[diff(which(x$calas == 0)) > 1] - 1)
for(i in unique(unique(ncalas))){
x[x$ncalas == i, "calas"][which.min(x[x$ncalas == i, "Vel_Cal"])[1]] <- 1
x[x$ncalas == i, "Lon_calas"][which.min(x[x$ncalas == i, "Vel_Cal"])[1]] <- x[x$ncalas == i, "Lon"][which.min(x[x$ncalas == i, "Vel_Cal"])[1]]
x[x$ncalas == i, "Lat_calas"][which.min(x[x$ncalas == i, "Vel_Cal"])[1]] <- x[x$ncalas == i, "Lat"][which.min(x[x$ncalas == i, "Vel_Cal"])[1]]
}
}
as.data.frame(x)
})
id_calas <- id_calas %>% lapply(as.data.frame) %>% bind_rows()
return(id_calas)
}
#output <- posiciones_cala(data0)
#predict_sets <- data0$Cala
#id_viajes$Cod_Barco_trip <- paste0(data0$Cod_Barco, "_",data0$trip)
data0 <- posiciones_cala(data = data0)
names(data0)
data0$calas[-c(ind_change_speed_1,ind_change_speed_2)] <- sets
data0$calas <- NA
data0$calas[-c(ind_change_speed_1,ind_change_speed_2)] <- sets
#output <- posiciones_cala(data0)
#predict_sets <- data0$Cala
#id_viajes$Cod_Barco_trip <- paste0(data0$Cod_Barco, "_",data0$trip)
data0 <- posiciones_cala(data = data0)
data0$calas
namefile = system.file("result_nnet", paste0("ann_year_loop_",ii,"_neurons_4.RData"),package = "vmsR")
namefile
#namefile = paste0(directory,"/result_nnet/ann_year_loop_",ii,"_neurons_",neurons)
#load(file = paste0(namefile, ".RData"))
load(namefile)
View(best.net)
best.net
head(data_scaled)
best.net
data$Dif_Tiempo[1]
data$Dif_Tiempo
data$Dif_Tiempo[1]
data$Dif_Tiempo[1:10]
i = 1:10
c(NA,data$Dif_Tiempo[lignes])
lignes <- 1:10
c(NA,data$Dif_Tiempo[lignes])
c(data$Dif_Tiempo[lignes],NA)
c(NA,data$Dif_Tiempo[lignes]) + c(data$Dif_Tiempo[lignes],NA)
data$Change_Speed_1[lignes]
data$Change_Speed_1[lignes]/Dif_T_3[1:(length(Dif_T_3)-1)]
c(data$Acel.1[lignes[-1]],NA) #c(data$Acel.1[lignes[2:length(lignes)]],NA)
c(data$Acel.1[lignes[-1]],NA)
data$Acel.1
data$Acel.1[lignes] <- data$Change_Speed_1[lignes]/Dif_T_3[1:(length(Dif_T_3)-1)]
data$Acel.1[lignes] <- data$Change_Speed_1[lignes]/Dif_T_3[1:(length(Dif_T_3)-1)]
lignes
data$Acel.1[lignes] <- data$Change_Speed_1[lignes]/Dif_T_3[1:(length(Dif_T_3)-1)]
data$Change_Speed_1[lignes]/Dif_T_3[1:(length(Dif_T_3)-1)]
Dif_T_3 <- c(NA,data$Dif_Tiempo[lignes]) + c(data$Dif_Tiempo[lignes],NA)
data$Change_Speed_1[lignes]/Dif_T_3[1:(length(Dif_T_3)-1)]
data$Acel.1[lignes] <- data$Change_Speed_1[lignes]/Dif_T_3[1:(length(Dif_T_3)-1)]
c(data$Acel.1[lignes[-1]],NA)
data$Acel.1[lignes] <- data$Change_Speed_1[lignes]/Dif_T_3[1:(length(Dif_T_3)-1)]
i = 1
data$Change_Speed_1[lignes] <- c(NA,diff(data$Vel.Cal[lignes]))
data$Change_Speed_2[lignes] <- c(diff(data$Vel.Cal[lignes]),NA)
Dif_T_3 <- c(NA,data$Dif_Tiempo[lignes]) + c(data$Dif_Tiempo[lignes],NA)
data$Acel.1[lignes] <- data$Change_Speed_1[lignes]/Dif_T_3[1:(length(Dif_T_3)-1)]
Dif_T_3 <- c(NA,data$Dif_Tiempo[lignes]) + c(data$Dif_Tiempo[lignes],NA)
data$Acel.1[lignes] <- data$Change_Speed_1[lignes]/Dif_T_3[1:(length(Dif_T_3)-1)]
data$Acel.2[lignes] <-  c(data$Acel.1[lignes[-1]],NA) #c(data$Acel.1[lignes[2:length(lignes)]],NA)
data$Change_Speed_1[lignes]/Dif_T_3[1:(length(Dif_T_3)-1)]
data$Change_Speed_1[lignes] <- c(NA,diff(data$Vel.Cal[lignes]))
data$Change_Speed_2[lignes] <- c(diff(data$Vel.Cal[lignes]),NA)
Dif_T_3 <- c(NA,data$Dif_Tiempo[lignes]) + c(data$Dif_Tiempo[lignes],NA)
Dif_T_3
data$Change_Speed_1[lignes]/Dif_T_3[1:(length(Dif_T_3)-1)]
names(data)
predict_sets <- function(data = data, directory = getwd(), thres = 0.51, neurons = 4, loops = 10){
variables <- c("Dist_Emisiones","Vel.Cal","Change_Speed_1","Change_Speed_2","Acel.1","Acel.2","hora.transf",
"cambio_rumbo_transf","Cambio.Rumbo.Tiempo")
ind_change_speed_1 <- which(is.na(data[,variables[3]]))
ind_change_speed_2 <- which(is.na(data[,variables[4]]))
data$calas  <- 0
data2       <- data[-c(ind_change_speed_1,ind_change_speed_2),]
data2       <- data2[,variables]
data_scaled <- scale(data2[,variables],center=TRUE,scale=TRUE)
predichas <- matrix(NA,nrow=dim(data_scaled)[1],ncol=loops)
for (ii in 1:loops){
namefile = system.file("result_nnet", paste0("ann_year_loop_",ii,"_neurons_4.RData"),package = "vmsR")
load(namefile)
predicted <- predict(best.net,data_scaled)
predichas[,ii] <- predicted[,2]
}
sets  <- as.numeric(apply(predichas,1,mean) > thres)
data$calas[-c(ind_change_speed_1,ind_change_speed_2)] <- sets
data  <- posiciones_cala(data = data)
calas <- data$calas
return(calas)
}
predict_sets <- function(data = data, thres = 0.51 loops = 10){
variables <- c("Dist_Emisiones","Vel.Cal","Change_Speed_1","Change_Speed_2","Acel.1","Acel.2","hora.transf",
"cambio_rumbo_transf","Cambio.Rumbo.Tiempo")
ind_change_speed_1 <- which(is.na(data[,variables[3]]))
ind_change_speed_2 <- which(is.na(data[,variables[4]]))
data$calas  <- 0
data2       <- data[-c(ind_change_speed_1,ind_change_speed_2),]
data2       <- data2[,variables]
data_scaled <- scale(data2[,variables],center=TRUE,scale=TRUE)
predichas <- matrix(NA,nrow=dim(data_scaled)[1],ncol=loops)
for (ii in 1:loops){
namefile = system.file("result_nnet", paste0("ann_year_loop_",ii,"_neurons_4.RData"),package = "vmsR")
load(namefile)
predicted <- predict(best.net,data_scaled)
predichas[,ii] <- predicted[,2]
}
sets  <- as.numeric(apply(predichas,1,mean) > thres)
data$calas[-c(ind_change_speed_1,ind_change_speed_2)] <- sets
data  <- posiciones_cala(data = data)
calas <- data$calas
return(calas)
}
## Predict ---------------->
predict_sets <- function(data = data, thres = 0.51, loops = 10){
variables <- c("Dist_Emisiones","Vel.Cal","Change_Speed_1","Change_Speed_2","Acel.1","Acel.2","hora.transf",
"cambio_rumbo_transf","Cambio.Rumbo.Tiempo")
ind_change_speed_1 <- which(is.na(data[,variables[3]]))
ind_change_speed_2 <- which(is.na(data[,variables[4]]))
data$calas  <- 0
data2       <- data[-c(ind_change_speed_1,ind_change_speed_2),]
data2       <- data2[,variables]
data_scaled <- scale(data2[,variables],center=TRUE,scale=TRUE)
predichas <- matrix(NA,nrow=dim(data_scaled)[1],ncol=loops)
for (ii in 1:loops){
namefile = system.file("result_nnet", paste0("ann_year_loop_",ii,"_neurons_4.RData"),package = "vmsR")
load(namefile)
predicted <- predict(best.net,data_scaled)
predichas[,ii] <- predicted[,2]
}
sets  <- as.numeric(apply(predichas,1,mean) > thres)
data$calas[-c(ind_change_speed_1,ind_change_speed_2)] <- sets
data  <- posiciones_cala(data = data)
calas <- data$calas
return(calas)
}
predict_sets
# data
data <- cluster
data$Cod_Viaje_VMS <- paste0(data$Cod_Barco, "-",data$trip)
data$date          <- as.POSIXct(strptime(as.character(data$Date), format = "%Y-%m-%d %H:%M:%S"))
data$Cod_Barco     <- as.factor(data$Cod_Barco)
data$Puerto_0_Mar_1<- as.factor(data$id)
fechas             <- unclass(as.POSIXlt(data$Date))
data$hora          <- fechas$hour + fechas$min/60 + fechas$sec/3600
data$hora.transf   <- cos(data$hora*pi/12)
data$cambio_rumbo_transf <- cos(data$Change_Course_Calc*pi/180)
data$Change_Speed_1 <- rep(NA,dim(data)[1])
data$Change_Speed_2 <- rep(NA,dim(data)[1])
data$Acel.1 <- rep(NA,dim(data)[1])
data$Acel.2 <- rep(NA,dim(data)[1])
data$Cambio.Rumbo.Tiempo <- rep(NA,dim(data)[1])
cod_viajes <- unique(data$Cod_Viaje_VMS)
## generar una funcion dplyr
for (i in seq_along(cod_viajes)){
lignes <- which(data$Cod_Viaje_VMS == cod_viajes[i])
data$Change_Speed_1[lignes] <- c(NA,diff(data$Vel.Cal[lignes]))
data$Change_Speed_2[lignes] <- c(diff(data$Vel.Cal[lignes]),NA)
Dif_T_3 <- c(NA,data$Time[lignes]) + c(data$Time[lignes],NA)
data$Acel.1[lignes] <- data$Change_Speed_1[lignes]/Dif_T_3[1:(length(Dif_T_3)-1)]
data$Acel.2[lignes] <-  c(data$Acel.1[lignes[-1]],NA) #c(data$Acel.1[lignes[2:length(lignes)]],NA)
data$Cambio.Rumbo.Tiempo[lignes] <- data$cambio_rumbo_transf[lignes]/Dif_T_3[1:(length(Dif_T_3)-1)]
}
datax <- getVar(data = data)
getVar <- function(data){
library(dplyr)
variables <- lapply(split(data, data$Cod_Viaje_VMS, drop = TRUE), function(x){
#lignes <- which(x$Cod_Viaje_VMS == cod_viajes[i])
x$Change_Speed_1 <- c(NA,diff(x$))
x$Change_Speed_2 <- c(diff(x$Vel.Cal),NA)
Dif_T_3 <- c(NA,x$Time) + c(x$Time,NA)
x$Acel.1 <- data$Change_Speed_1/Dif_T_3[1:(length(Dif_T_3)-1)]
x$Acel.2 <-  c(x$Acel.1[-1],NA)
x$Cambio.Rumbo.Tiempo[lignes] <- x$cambio_rumbo_transf/Dif_T_3[1:(length(Dif_T_3)-1)]
as.data.frame(x)
})
variables <- variables %>% lapply(as.data.frame) %>% bind_rows()
return(variables)
}
getVar <- function(data){
library(dplyr)
variables <- lapply(split(data, data$Cod_Viaje_VMS, drop = TRUE), function(x){
#lignes <- which(x$Cod_Viaje_VMS == cod_viajes[i])
x$Change_Speed_1 <- c(NA,diff(x$Vel.Cal))
x$Change_Speed_2 <- c(diff(x$Vel.Cal),NA)
Dif_T_3 <- c(NA,x$Time) + c(x$Time,NA)
x$Acel.1 <- data$Change_Speed_1/Dif_T_3[1:(length(Dif_T_3)-1)]
x$Acel.2 <-  c(x$Acel.1[-1],NA)
x$Cambio.Rumbo.Tiempo[lignes] <- x$cambio_rumbo_transf/Dif_T_3[1:(length(Dif_T_3)-1)]
as.data.frame(x)
})
variables <- variables %>% lapply(as.data.frame) %>% bind_rows()
return(variables)
}
datax <- getVar(data = data)
getVar <- function(data){
library(dplyr)
variables <- lapply(split(data, data$Cod_Viaje_VMS, drop = TRUE), function(x){
#lignes <- which(x$Cod_Viaje_VMS == cod_viajes[i])
x$Change_Speed_1 <- c(NA,diff(x$Vel.Cal))
x$Change_Speed_2 <- c(diff(x$Vel.Cal),NA)
Dif_T_3 <- c(NA,x$Time) + c(x$Time,NA)
x$Acel.1 <- data$Change_Speed_1/Dif_T_3[1:(length(Dif_T_3)-1)]
x$Acel.2 <-  c(x$Acel.1[-1],NA)
x$Cambio.Rumbo.Tiempo <- x$cambio_rumbo_transf/Dif_T_3[1:(length(Dif_T_3)-1)]
as.data.frame(x)
})
variables <- variables %>% lapply(as.data.frame) %>% bind_rows()
return(variables)
}
datax <- getVar(data = data)
## estimar aceleracion
x <- data[data$Cod_Viaje_VMS %in% data$Cod_Viaje_VMS[1],]
x
#lignes <- which(x$Cod_Viaje_VMS == cod_viajes[i])
x$Change_Speed_1 <- c(NA,diff(x$Vel.Cal))
x$Change_Speed_2 <- c(diff(x$Vel.Cal),NA)
Dif_T_3 <- c(NA,x$Time) + c(x$Time,NA)
x$Acel.1 <- data$Change_Speed_1/Dif_T_3[1:(length(Dif_T_3)-1)]
Dif_T_3
lenght(Dif_T_3)
Dif_T_3 <- c(NA,x$Time) + c(x$Time,NA)
length(Dif_T_3)
length(x$Change_Speed_2)
length(x$Time)
getVar <- function(data){
library(dplyr)
variables <- lapply(split(data, data$Cod_Viaje_VMS, drop = TRUE), function(x){
#lignes <- which(x$Cod_Viaje_VMS == cod_viajes[i])
x$Change_Speed_1 <- c(NA,diff(x$Vel.Cal))
x$Change_Speed_2 <- c(diff(x$Vel.Cal),NA)
Dif_T_3 <- c(NA,x$Time) + c(x$Time,NA)
x$Acel.1 <- x$Change_Speed_1/Dif_T_3[1:(length(Dif_T_3)-1)]
x$Acel.2 <-  c(x$Acel.1[-1],NA)
x$Cambio.Rumbo.Tiempo <- x$cambio_rumbo_transf/Dif_T_3[1:(length(Dif_T_3)-1)]
as.data.frame(x)
})
variables <- variables %>% lapply(as.data.frame) %>% bind_rows()
return(variables)
}
datax <- getVar(data = data)
head(datax)
directory = getwd()
thres = 0.51
#neurons = 4
loops = 50
directory = getwd()
thres = 0.51
#neurons = 4
loops = 50
datax$calas <- predict_sets(data = datax, directory = getwd(), thres = 0.51, loops = 50)
datax$calas <- predict_sets(data = datax , thres = 0.51, loops = 50)
data <- datax
ind_change_speed_1 <- which(is.na(data[,variables[3]]))
ind_change_speed_2 <- which(is.na(data[,variables[4]]))
variables[3]
variables <- c("Dist_Emisiones","Vel.Cal","Change_Speed_1","Change_Speed_2","Acel.1","Acel.2","hora.transf",
"cambio_rumbo_transf","Cambio.Rumbo.Tiempo")
ind_change_speed_1 <- which(is.na(data[,variables[3]]))
ind_change_speed_2 <- which(is.na(data[,variables[4]]))
ind_change_speed_1
data$calas  <- 0
data2       <- data[-c(ind_change_speed_1,ind_change_speed_2),]
data_scaled <- scale(data2[,variables],center=TRUE,scale=TRUE)
variables
data_scaled <- scale(data2,center=TRUE,scale=TRUE)
predichas <- matrix(NA,nrow=dim(data_scaled)[1],ncol=loops)
for (ii in 1:loops){
namefile = system.file("result_nnet", paste0("ann_year_loop_",ii,"_neurons_4.RData"),package = "vmsR")
load(namefile)
predicted <- predict(best.net,data_scaled)
predichas[,ii] <- predicted[,2]
}
namefile = system.file("result_nnet", paste0("ann_year_loop_",ii,"_neurons_4.RData"),package = "vmsR")
load(namefile)
best
best.net
head(data_scaled)
data2
data <- datax
head(data)
variables <- c("Dist_Emisiones","Vel.Cal","Change_Speed_1","Change_Speed_2","Acel.1","Acel.2","hora.transf",
"cambio_rumbo_transf","Cambio.Rumbo.Tiempo")
ind_change_speed_1 <- which(is.na(data[,variables[3]]))
ind_change_speed_2 <- which(is.na(data[,variables[4]]))
data$calas  <- 0
data2       <- data[-c(ind_change_speed_1,ind_change_speed_2),]
head(data2)
data <- datax
head(data)
ind_change_speed_1 <- which(is.na(data[,variables[3]]))
ind_change_speed_2 <- which(is.na(data[,variables[4]]))
ind_change_speed_1
ind_change_speed_2
data2       <- data[-c(ind_change_speed_1,ind_change_speed_2),]
head(data2)
ind_change_speed_1
table(is.na(data[,variables[3]]))
data[,variables[3]
]
variables
variables[3]
head(data)
datax <- getVar(data = data)
# data
data <- cluster
data$Cod_Viaje_VMS <- paste0(data$Cod_Barco, "-",data$trip)
data$date          <- as.POSIXct(strptime(as.character(data$Date), format = "%Y-%m-%d %H:%M:%S"))
data$Cod_Barco     <- as.factor(data$Cod_Barco)
data$Puerto_0_Mar_1<- as.factor(data$id)
fechas             <- unclass(as.POSIXlt(data$Date))
data$hora          <- fechas$hour + fechas$min/60 + fechas$sec/3600
data$hora.transf   <- cos(data$hora*pi/12)
data$cambio_rumbo_transf <- cos(data$Change_Course_Calc*pi/180)
data$Change_Speed_1 <- rep(NA,dim(data)[1])
data$Change_Speed_2 <- rep(NA,dim(data)[1])
data$Acel.1 <- rep(NA,dim(data)[1])
data$Acel.2 <- rep(NA,dim(data)[1])
data$Cambio.Rumbo.Tiempo <- rep(NA,dim(data)[1])
cod_viajes <- unique(data$Cod_Viaje_VMS)
getVar <- function(data){
library(dplyr)
variables <- lapply(split(data, data$Cod_Viaje_VMS, drop = TRUE), function(x){
#lignes <- which(x$Cod_Viaje_VMS == cod_viajes[i])
x$Change_Speed_1 <- c(NA,diff(x$Vel.Cal))
x$Change_Speed_2 <- c(diff(x$Vel.Cal),NA)
Dif_T_3 <- c(NA,x$Time) + c(x$Time,NA)
x$Acel.1 <- x$Change_Speed_1/Dif_T_3[1:(length(Dif_T_3)-1)]
x$Acel.2 <-  c(x$Acel.1[-1],NA)
x$Cambio.Rumbo.Tiempo <- x$cambio_rumbo_transf/Dif_T_3[1:(length(Dif_T_3)-1)]
as.data.frame(x)
})
variables <- variables %>% lapply(as.data.frame) %>% bind_rows()
return(variables)
}
datax <- getVar(data = data)
head(datax)
## estimar aceleracion
x <- data[data$Cod_Viaje_VMS %in% data$Cod_Viaje_VMS[1],]
x$Vel.Cal
x$Vel.Cal
head(x)
getwd()
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
#if(max(y$Dist_Emisiones) > vmax*hmax){ # umbral maximun dist
#y$mistake <- 1 #has some error in distance
#}
if(min(y$Time)==0){ # time equals 0
x$mistake <- 1 #has some error in time
}
if(min(y$Time) > hmax){ # umbral maximun time
x$mistake <- 1 #has some error in time
}
library(vmsR)
require(vmsR)
require(spict)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
joint_vms_to_obs
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
processing_vms
require(vsmR)
require(vmsR)
training_nnet
record = 1
cat(record, "DUPLICATE RECORDS WERE OMITTED")
library(vmsR)
require(vmsR)
calculate_angle(x = c(1,1),y = c(2,2))
calculate_course(x = c(1,1),y = c(2,2))
calculate_course(lon = c(1,1),lat = c(2,2))
calculate_course(lon = c(1,1,1),lat = c(2,2,2))
calculate_course(lon = c(1,1,1),lat = c(2,2,2,3))
calculate_course(lon = c(1,1,1,3),lat = c(2,2,2,3))
library(vmsR)
require(vmsR)
training_nnet
cat(paste0("\n","><>><>><>><>><>><>><>><><>><>"))
cat(paste0("\n","><>  The process is over  <><"))
cat(paste0("\n","><>><>><>><>><>><>><>><><>><>","\n","\n"))
record = 4
cat(paste0("\n","><>><>><>><>><>><>><>><><>><>"))
cat(paste0("\n",record, "duplicate records were omitted"))
cat(paste0("\n","><>><>><>><>><>><>><>><><>><>","\n","\n"))
cat(paste0("\n","><>><>><>><>><>><>><>><><>><>"))
cat(paste0("\n",record , "duplicate records were omitted"))
cat(paste0("\n","><>><>><>><>><>><>><>><><>><>","\n","\n"))
cat(paste0("\n","><>><>><>><>><>><>><>><><>><>><>><>><>><>"))
cat(paste0("\n",record, " duplicate records were omitted"))
cat(paste0("\n","><>><>><>><>><>><>><>><><>><>><>><>><>><>","\n","\n"))
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
namefile = "C:/pablo/D/2021/ClasesVMS/Result_nnet/"
ii = 1
paste0(namefile, paste0("ann_year_loop_",ii,"_neurons_4.RData"))
library(vmsR)
library(vmsR)
predict_sets2
library(vmsR)
predict_sets2
library(vmsR)
identify_set
library(vmsR)
load("C:/pablo/D/2021/ClasesVMS/Result_nnet/ann_year_loop_1_neurons_4.RData")
library(vmsR)
identify_set
vmsR
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
identify_set
library(vmsR)
