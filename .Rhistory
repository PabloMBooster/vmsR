# data0 <- data[data$Cod_Barco == 12074,]# 12232
#
output <- processing_vms(data = data_vms_raw, vessel = "Cod_Barco", harbor = harbor)
library(vmsR)
# data <- data[data$Nombre_Barco %in% names(obs_vessel),]
# #
# data$Fecha_Matlab <- modTime(data$Fecha_Matlab)
# data_vessel <- data[data$num_vessel == data$num_vessel[1], ]
# #
# data <- data[data$Cod_Barco == unique(data$Cod_Barco)[1],]
# oo <- table(data$Cod_Barco)
# # oo <-oo[oo < 10]
# data <- data[!data$Cod_Barco %in% names(oo),]
# #
output <- processing_vms(data = data, vessel = "Cod_Barco", harbor = harbor)
# data <- data[data$Nombre_Barco %in% names(obs_vessel),]
# #
# data$Fecha_Matlab <- modTime(data$Fecha_Matlab)
# data_vessel <- data[data$num_vessel == data$num_vessel[1], ]
# #
# data <- data[data$Cod_Barco == unique(data$Cod_Barco)[1],]
# oo <- table(data$Cod_Barco)
# # oo <-oo[oo < 10]
# data <- data[!data$Cod_Barco %in% names(oo),]
# #
output <- processing_vms(data = data_vms_raw, vessel = "Cod_Barco", harbor = harbor)
processing_vms <- function(data, vessel = "Cod_Barco", harbor){
library(dplyr)
id_vessel <- lapply(split(data, data$Cod_Barco, drop = TRUE), function(data_vessel){
data_vessel     <- data_vessel[order(data_vessel$Date),]
eharbor         <- distance_harbor(data_vessel, harbor)
data_vessel$Harbor      <- eharbor$name_harbor
data_vessel$Dist_Harbor <- eharbor$dist_harbor
data_vessel$Time      <- NA
data_vessel$Time[2:(length(data_vessel[,1]))] <- (julian(data_vessel$Date[1:(length(data_vessel[,1])-1)])-julian(data_vessel$Date[2:(length(data_vessel[,1]))]))*24*(-1)
data_vessel$Dist_Emisiones <- NA
data_vessel$Dist_Emisiones[2:(length(data_vessel[,1]))] <- dist_ortodromica(data_vessel$Lon[1:(length(data_vessel[,1])-1)],data_vessel$Lat[1:(length(data_vessel[,1])-1)],data_vessel$Lon[2:length(data_vessel[,1])],data_vessel$Lat[2:length(data_vessel[,1])])
data_vessel$Vel_Cal <- NA
data_vessel$Vel_Cal <- data_vessel$Dist_Emisiones/data_vessel$Time
data_vessel$Vel_Cal[is.na(data_vessel$Vel_Cal)] <- 0
#data_vessel$change_speed_1  <- NA
#data_vessel$change_speed_1[-1]  <- diff(data_vessel$velocity_2)
#data_vessel$change_speed_2  <- NA
#data_vessel$change_speed_2[-length(data_vessel$change_speed_1)]  <- diff(data_vessel$velocity_2)
data_vessel$Rumbo_Calc   <- NA
data_vessel$Rumbo_Calc   <- calculate_course(x = data_vessel$Lon, y = data_vessel$Lat)
data_vessel$Cambio_Rumbo_Calc <- apply(matrix(data_vessel$Rumbo_Calc), 1, change_course) # change_course function
as.data.frame(data_vessel)
})
id_vessel <- id_vessel %>% lapply(as.data.frame) %>% bind_rows()
# check_date < length(is.na(id_vessel$Date))
#
# if(exists(check_date)){
#   print(paste0("the date variable has ",check_date,"NA revise it"))
# }
return(id_vessel)
}
# data <- data[data$Nombre_Barco %in% names(obs_vessel),]
# #
# data$Fecha_Matlab <- modTime(data$Fecha_Matlab)
# data_vessel <- data[data$num_vessel == data$num_vessel[1], ]
# #
# data <- data[data$Cod_Barco == unique(data$Cod_Barco)[1],]
# oo <- table(data$Cod_Barco)
# # oo <-oo[oo < 10]
# data <- data[!data$Cod_Barco %in% names(oo),]
# #
output <- processing_vms(data = data_vms_raw, vessel = "Cod_Barco", harbor = harbor)
head(data_vms_raw)
processing_vms <- function(data, vessel = "Cod_Barco", harbor){
library(dplyr)
id_vessel <- lapply(split(data, data$Cod_Barco, drop = TRUE), function(data_vessel){
data_vessel     <- data_vessel[order(data_vessel$Date),]
eharbor         <- distance_harbor(data_vessel, harbor)
data_vessel$Harbor      <- eharbor$name_harbor
data_vessel$Dist_Harbor <- eharbor$dist_harbor
data_vessel$Time      <- NA
data_vessel$Time[2:(length(data_vessel[,1]))] <- (julian(data_vessel$Date[1:(length(data_vessel[,1])-1)])-julian(data_vessel$Date[2:(length(data_vessel[,1]))]))*24*(-1)
data_vessel$Dist_Emisiones <- NA
data_vessel$Dist_Emisiones[2:(length(data_vessel[,1]))] <- dist_ortodromica(data_vessel$Lon[1:(length(data_vessel[,1])-1)],data_vessel$Lat[1:(length(data_vessel[,1])-1)],data_vessel$Lon[2:length(data_vessel[,1])],data_vessel$Lat[2:length(data_vessel[,1])])
data_vessel$Vel_Cal <- NA
data_vessel$Vel_Cal <- data_vessel$Dist_Emisiones/data_vessel$Time
data_vessel$Vel_Cal[is.na(data_vessel$Vel_Cal)] <- 0
#data_vessel$change_speed_1  <- NA
#data_vessel$change_speed_1[-1]  <- diff(data_vessel$velocity_2)
#data_vessel$change_speed_2  <- NA
#data_vessel$change_speed_2[-length(data_vessel$change_speed_1)]  <- diff(data_vessel$velocity_2)
data_vessel$Rumbo_Calc   <- NA
data_vessel$Rumbo_Calc   <- calculate_course(x = data_vessel$Lon, y = data_vessel$Lat)
data_vessel$Cambio_Rumbo_Calc <- apply(matrix(data_vessel$Rumbo_Calc), 1, change_course) # change_course function
as.data.frame(data_vessel)
})
id_vessel <- id_vessel %>% lapply(as.data.frame) %>% bind_rows()
# check_date < length(is.na(id_vessel$Date))
#
# if(exists(check_date)){
#   print(paste0("the date variable has ",check_date,"NA revise it"))
# }
return(id_vessel)
}
# data <- data[data$Nombre_Barco %in% names(obs_vessel),]
# #
# data$Fecha_Matlab <- modTime(data$Fecha_Matlab)
# data_vessel <- data[data$num_vessel == data$num_vessel[1], ]
# #
# data <- data[data$Cod_Barco == unique(data$Cod_Barco)[1],]
# oo <- table(data$Cod_Barco)
# # oo <-oo[oo < 10]
# data <- data[!data$Cod_Barco %in% names(oo),]
# #
output <- processing_vms(data = data_vms_raw, vessel = "Cod_Barco", harbor = harbor)
data_vms_raw$Cod_Barco
unique(data_vms_raw$Cod_Barco)
table(data_vms_raw$Cod_Barco)
aa = table(data_vms_raw$Cod_Barco)
aa[aa < 10]
aa[aa < 100]
#### <><#### <><#### <><#### <><#### <><#### <><#### <><#### <><#### <><#### <><
# dat <- read.csv("D:/disco_rocio/disco_duro2/vms_prueba_tesis/data_vms/2013/data2013.csv")
# dat <- dat[,-1]
# names(dat) <- c("Cod_Barco", "Name_vessel","Date","Lon", "Lat", "Vel_VMS", "Course")
# dat$Date <- as.POSIXct(strptime(dat$Date, format = "%d/%m/%Y %H:%M"))
# #
data0 <- data_vms_raw[data_vms_raw$Cod_Barco == "CO-16854-PM",]# 12232
output <- processing_vms(data = data0, vessel = "Cod_Barco", harbor = harbor)
head(output)
head(data0)
output
head(output)
head(data_vms_raw)
head(output)
trip_vessel  <- identify_trip(data = output, vharbor = 2, rmin = 6, hmax = 2.7)
map_vms(trip_vessel0$Lon[trip_vessel0$trip == 1], trip_vessel0$Lat[trip_vessel0$trip == 1], trip_vessel0$Vel_Cal[trip_vessel0$trip == 1])
map_vms(trip_vessel$Lon[trip_vessel$trip == 1], trip_vessel$Lat[trip_vessel$trip == 1], trip_vessel$Vel_Cal[trip_vessel$trip == 1])
library(vmsR)
joint_vms_to_obs
## ><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>
## SURPLUS PRODUCTION IN CONTINUOS TIME (SPICT)
## ><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>
## (1953 - 2018)
# packages
library(datalimited2)
library(spict)
# dir
directorio <- "C:/pablo/D/trabajos/data poor/MBD/mbd"
setwd(directorio)
# read data
DataCapturaSem <- read.csv("C:/pablo//D/trabajos/data poor/MBD/mbd/LandTotal(Weight)BiolSem.csv")
DataCapturaY    <- read.csv("C:/pablo//D/trabajos/data poor/MBD/mbd/catch_peru_anchovy_nc_anual_1953_2018.csv")
IndexSem       <- read.csv("C:/pablo//D/trabajos/data poor/MBD/mbd/IndexSem.csv")
IndexSem1 <- IndexSem[substring(IndexSem$TimeLabel,5,6) == "",]
IndexSem2 <- IndexSem[substring(IndexSem$TimeLabel,5,6) == ".5",]
inp <- list(timeC=DataCapturaSem$BiolSem, obsC=DataCapturaSem$Landing/1e+6)
inp$timeI <- list(IndexSem1$TimeLabel, IndexSem2$TimeLabel)
inp$obsI  <- list()
inp$obsI[[1]] <- IndexSem1$Biom/1e+6 # Index 1
inp$obsI[[2]] <- IndexSem2$Biom/1e+6 # Index 2
# input spict
inp <- check.inp(inp)
plotspict.data(inp)
# priors
inp$priors$logbkfrac <- c(log(1), 0.05, 1)
inp$priors$logq[[1]] <- c(log(1), 0.2, 1)
inp$priors$logq[[2]] <- c(log(1), 0.2, 1)
# fit
res  <- fit.spict(inp)
res
Best <- get.par('logB', res, exp=TRUE)
Best
tail(res  <- fit.spict(inp))
tail(res)
tail(Best)
res
tail(Best, 12)
res2
res2  <- manage(res)
res2
df <- mansummary(res2)
list.quantities(rep)
list.quantities(res)
Cpred <- get.par('logCpred', res, exp=TRUE)
Cpred
dim(Cpred)
dim(Best)
list.quantities(res)
Cpred <- get.par('Cp', res, exp=TRUE)
Cpred
Cpred <- get.par('Cp', res)
Cpred
res
Cpred
list.quantities(res)
Best <- get.par('logBest', res, exp = TRUE)
Best
Best <- get.par('logB', res, exp = TRUE)
Best
tail(Best, 12)
res
inp$timepredc
inp$manstart <- 2019
inp$timepredc <- 2019
inp$dtpredc <- 1
inp$timepredi <- 2020
res
inp$ffac <- 0.75
df <- mansummary(res)
res2  <- manage(res)
df <- mansummary(res2)
inp$manstart <- 2020
inp$timepredc <- 2020
inp$dtpredc <- 1
inp$timepredi <- 2021
inp$ffac <- 0.75
# fit
res  <- fit.spict(inp)
## ><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>
## SURPLUS PRODUCTION IN CONTINUOS TIME (SPICT)
## ><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>
## (1953 - 2018)
# packages
library(datalimited2)
library(spict)
# dir
directorio <- "C:/pablo/D/trabajos/data poor/MBD/mbd"
setwd(directorio)
# read data
DataCapturaSem <- read.csv("C:/pablo//D/trabajos/data poor/MBD/mbd/LandTotal(Weight)BiolSem.csv")
DataCapturaY    <- read.csv("C:/pablo//D/trabajos/data poor/MBD/mbd/catch_peru_anchovy_nc_anual_1953_2018.csv")
IndexSem       <- read.csv("C:/pablo//D/trabajos/data poor/MBD/mbd/IndexSem.csv")
IndexSem1 <- IndexSem[substring(IndexSem$TimeLabel,5,6) == "",]
IndexSem2 <- IndexSem[substring(IndexSem$TimeLabel,5,6) == ".5",]
inp <- list(timeC=DataCapturaSem$BiolSem, obsC=DataCapturaSem$Landing/1e+6)
inp$timeI <- list(IndexSem1$TimeLabel, IndexSem2$TimeLabel)
inp$obsI  <- list()
inp$obsI[[1]] <- IndexSem1$Biom/1e+6 # Index 1
inp$obsI[[2]] <- IndexSem2$Biom/1e+6 # Index 2
# input spict
inp <- check.inp(inp)
plotspict.data(inp)
# priors
inp$priors$logbkfrac <- c(log(1), 0.05, 1)
inp$priors$logq[[1]] <- c(log(1), 0.2, 1)
inp$priors$logq[[2]] <- c(log(1), 0.2, 1)
# fit
res  <- fit.spict(inp)
df
res2
inp$ffac
library(spict)
data(pol)
inp <- pol$albacore
inp$manstart <- 1991
inp$timepredc <- 1991
inp$dtpredc <- 1
inp$timepredi <- 1992
inp$ffac <- 0.75
res <- fit.spict(inp)
res
inp$ffac <- 5
res <- fit.spict(inp)
res
0.3348379*5
0.3717681*5
0.4160742 *5
0.4160746*5
get.par('logF', res, exp = TRUE)
tail(get.par('logF', res, exp = TRUE))
Fest <-  get.par('logF', res, exp = TRUE)
plot(Fest[,3], type = "l")
## ><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>
## SURPLUS PRODUCTION IN CONTINUOS TIME (SPICT)
## ><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>
## (1953 - 2018)
# packages
library(datalimited2)
library(spict)
# dir
directorio <- "C:/pablo/D/trabajos/data poor/MBD/mbd"
setwd(directorio)
# read data
DataCapturaSem <- read.csv("C:/pablo//D/trabajos/data poor/MBD/mbd/LandTotal(Weight)BiolSem.csv")
DataCapturaY    <- read.csv("C:/pablo//D/trabajos/data poor/MBD/mbd/catch_peru_anchovy_nc_anual_1953_2018.csv")
IndexSem       <- read.csv("C:/pablo//D/trabajos/data poor/MBD/mbd/IndexSem.csv")
IndexSem1 <- IndexSem[substring(IndexSem$TimeLabel,5,6) == "",]
IndexSem2 <- IndexSem[substring(IndexSem$TimeLabel,5,6) == ".5",]
inp <- list(timeC=DataCapturaSem$BiolSem, obsC=DataCapturaSem$Landing/1e+6)
inp$timeI <- list(IndexSem1$TimeLabel, IndexSem2$TimeLabel)
inp$obsI  <- list()
inp$obsI[[1]] <- IndexSem1$Biom/1e+6 # Index 1
inp$obsI[[2]] <- IndexSem2$Biom/1e+6 # Index 2
# input spict
inp <- check.inp(inp)
plotspict.data(inp)
# priors
inp$priors$logbkfrac <- c(log(1), 0.05, 1)
inp$priors$logq[[1]] <- c(log(1), 0.2, 1)
inp$priors$logq[[2]] <- c(log(1), 0.2, 1)
inp$manstart <- 2019
inp$timepredc <- 2019
inp$dtpredc <- 1
inp$timepredi <- 2020
inp$ffac <- 2
res  <- fit.spict(inp)
## ><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>
## SURPLUS PRODUCTION IN CONTINUOS TIME (SPICT)
## ><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>
## (1953 - 2018)
# packages
library(datalimited2)
library(spict)
# dir
directorio <- "C:/pablo/D/trabajos/data poor/MBD/mbd"
setwd(directorio)
# read data
DataCapturaSem <- read.csv("C:/pablo//D/trabajos/data poor/MBD/mbd/LandTotal(Weight)BiolSem.csv")
DataCapturaY    <- read.csv("C:/pablo//D/trabajos/data poor/MBD/mbd/catch_peru_anchovy_nc_anual_1953_2018.csv")
IndexSem       <- read.csv("C:/pablo//D/trabajos/data poor/MBD/mbd/IndexSem.csv")
IndexSem1 <- IndexSem[substring(IndexSem$TimeLabel,5,6) == "",]
IndexSem2 <- IndexSem[substring(IndexSem$TimeLabel,5,6) == ".5",]
inp <- list(timeC=DataCapturaSem$BiolSem, obsC=DataCapturaSem$Landing/1e+6)
inp$timeI <- list(IndexSem1$TimeLabel, IndexSem2$TimeLabel)
inp$obsI  <- list()
inp$obsI[[1]] <- IndexSem1$Biom/1e+6 # Index 1
inp$obsI[[2]] <- IndexSem2$Biom/1e+6 # Index 2
# input spict
inp <- check.inp(inp)
plotspict.data(inp)
# priors
inp$priors$logbkfrac <- c(log(1), 0.05, 1)
inp$priors$logq[[1]] <- c(log(1), 0.2, 1)
inp$priors$logq[[2]] <- c(log(1), 0.2, 1)
inp$manstart <- 2019
inp$timepredc <- 2019
inp$dtpredc <- 1
inp$timepredi <- 2020
inp$ffac <- 2
res  <- fit.spict(inp)
inp$ini$logr
## ><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>
## SURPLUS PRODUCTION IN CONTINUOS TIME (SPICT)
## ><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>><>
## (1953 - 2018)
# packages
library(datalimited2)
library(spict)
# dir
directorio <- "C:/pablo/D/trabajos/data poor/MBD/mbd"
setwd(directorio)
# read data
DataCapturaSem <- read.csv("C:/pablo//D/trabajos/data poor/MBD/mbd/LandTotal(Weight)BiolSem.csv")
DataCapturaY    <- read.csv("C:/pablo//D/trabajos/data poor/MBD/mbd/catch_peru_anchovy_nc_anual_1953_2018.csv")
IndexSem       <- read.csv("C:/pablo//D/trabajos/data poor/MBD/mbd/IndexSem.csv")
IndexSem1 <- IndexSem[substring(IndexSem$TimeLabel,5,6) == "",]
IndexSem2 <- IndexSem[substring(IndexSem$TimeLabel,5,6) == ".5",]
inp <- list(timeC=DataCapturaSem$BiolSem, obsC=DataCapturaSem$Landing/1e+6)
inp$timeI <- list(IndexSem1$TimeLabel, IndexSem2$TimeLabel)
inp$obsI  <- list()
inp$obsI[[1]] <- IndexSem1$Biom/1e+6 # Index 1
inp$obsI[[2]] <- IndexSem2$Biom/1e+6 # Index 2
# input spict
inp <- check.inp(inp)
inp$ini$logr
inp$priors$logbkfrac <- c(log(1), 0.05, 1)
inp$priors$logq[[1]] <- c(log(1), 0.2, 1)
inp$priors$logq[[2]] <- c(log(1), 0.2, 1)
# fit
res  <- fit.spict(inp)
inp$manstart <- 2018.5
inp$timepredc <- 2018.5
inp$dtpredc <- 1
inp$timepredi <- 2019
inp$ffac <- 2
res  <- fit.spict(inp)
inp$manstart <- 2018
inp$timepredc <- 2018
inp$dtpredc <- 1
inp$timepredi <- 2019
inp$ffac <- 1
res  <- fit.spict(inp)
res
Fest <- get.par('logF', res, exp = TRUE)
plot(Fest, type = "l")
plot(Fest[,3], type = "l")
inp$ffac <- 2
res  <- fit.spict(inp)
Fest <- get.par('logF', res, exp = TRUE)
lines(Fest[,3], type = "l", col = 2)
inp$ffac <- 4
res  <- fit.spict(inp)
Fest2 <- get.par('logF', res, exp = TRUE)
lines(Fest2[,3], type = "l", col = 4)
plot(Fest[,3], Fest2[,3])
inp$manstart <- 2019
inp$timepredc <- 2019
inp$dtpredc <- 1
inp$timepredi <- 2020
inp$ffac <- 4
res  <- fit.spict(inp)
inp$timepredi <- 2019.5
inp$ffac <- 4
res  <- fit.spict(inp)
inp$manstart <- 2019
inp$timepredc <- 2019
inp$dtpredc <- 1
inp$timepredi <- 2020
inp$ffac <- 4
inp$ffac <- 0.4
res  <- fit.spict(inp)
inp$ffac <- 1.5
res  <- fit.spict(inp)
library(spict)
data(pol)
inp <- pol$albacore
inp$manstart <- 1991
inp$timepredc <- 1991
inp$dtpredc <- 1
inp$timepredi <- 1992
inp$ffac <- 5
res <- fit.spict(inp)
Fest <-  get.par('logF', res, exp = TRUE)
plot(Fest[,3], type = "l")
inp$timeC
inp$obsI
res
res
Fest
pol$albacore
library(spict)
data(pol)
inp <- pol$albacore
inp$manstart <- 1991
inp$timepredc <- 1991
inp$dtpredc <- 1
inp$timepredi <- 1992
inp$ffac <- 5
res <- fit.spict(inp)
res
inp$ffac <- 10
res <- fit.spict(inp)
res
inp
pol$albacore
str(pol$albacore)
str(pol$albacore)
list.quantities(res)
get.par('"Bmsys"', res, exp = TRUE)
get.par('"Bmsys"', res)
str(pol$albacore)
class(pol$albacore)
rangeWeek
setwd("C:/pablo/D/github/vmsR")
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
head(harbor)
head(data_vms_raw)
data_vessel  <- data_vms_raw[data_vms_raw$Cod_Barco == "CO-16854-PM",]# 12232
output       <- processing_vms(data = data_vessel, vessel = "Cod_Barco", harbor = harbor)
head(output)
trip_vessel  <- identify_trip(data = output, vharbor = 2, rmin = 6, hmax = 2.7)
head(trip_vessel)
map_vms(trip_vessel$Lon[trip_vessel$trip == 1], trip_vessel$Lat[trip_vessel$trip == 1], trip_vessel$Vel_Cal[trip_vessel$trip == 1])
map_vms(trip_vessel$Lon[trip_vessel$trip == 2], trip_vessel$Lat[trip_vessel$trip == 2], trip_vessel$Vel_Cal[trip_vessel$trip == 2])
head(data_vms)
loops = 2
neurons = 4
MSE_max = 0.04
# calibration
nnet_out <- training_nnet(data = data_vms, directory = getwd(), neurons = neurons, MSE_max = MSE_max, loops = loops)
# map
require(maps)
plot(data_vms$Lon, y = data_vms$Lat, cex = 0.4, pch = 16, xlab = "lon", ylab = "lat")
points(data_vms$Lon[data_vms$Calas == 1], y = data_vms$Lat[data_vms$Calas == 1], col = 2, cex = 0.4)
map("worldHires",fill=T, myborder = FALSE, add = TRUE, col = "khaki1")
require(maps)
plot(data_vms$Lon, y = data_vms$Lat, cex = 0.4, pch = 16, xlab = "lon", ylab = "lat")
points(data_vms$Lon[data_vms$Calas == 1], y = data_vms$Lat[data_vms$Calas == 1], col = 2, cex = 0.4)
data_vms$Calas
# prediction
data_vms$Calas <- predict_sets(data = data_vms, directory = getwd(), loops = loops)
points(data_vms$Lon[data_vms$Calas == 1], y = data_vms$Lat[data_vms$Calas == 1], col = 2, cex = 0.4)
map("worldHires",fill=T, myborder = FALSE, add = TRUE, col = "khaki1")
box()
# map
require(maps)
map("worldHires",fill=T, myborder = FALSE, add = TRUE, col = "khaki1")
box()
map("worldHires",fill=T, myborder = FALSE, add = TRUE, col = "khaki1")
# map
require(maps)
map("worldHires",fill=T, myborder = FALSE, add = TRUE, col = "khaki1")
# map
require(maps)
points(data_vms$Lon[data_vms$Calas == 1], y = data_vms$Lat[data_vms$Calas == 1], col = 2, cex = 0.4)
library(vmsR)
require(vmsR)
head(data_vms)
dim(data_vms)
head(data_vms)
loops = 50
neurons = 4
MSE_max = 0.04
# calibration
nnet_out <- training_nnet(data = data_vms, directory = getwd(), neurons = neurons, MSE_max = MSE_max, loops = loops)
head(data_vms)
getwd()
head(data_vms)
library(vmsR)
library(vmsR)
