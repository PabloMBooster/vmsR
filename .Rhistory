theta = theta
}else{
theta = 360-theta
}
}
return(theta)}
c3 <- rumbo(lon = base_barco$Lon, lat = base_barco$Lat, dist = base_barco$Dist_Emisiones)
rumbo <- function(lon, lat, dist){
vectorRumbo <- NULL
vectorRumbo[1] <- NA
for(i in 2:length(lon)){
rad <- pi/180
x2 <-  lon[i]*rad
y2 <-  lat[i]*rad
x1 <-  lon[i-1]*rad
y1 <-  lat[i-1]*rad
d1 <-  dist[i-1]
theta <- (180/pi)*acos((sin(y2)-sin(y1)*cos(d1))/(cos(y1)*sen(d1)))
diffLon <- x1-x2
if(diffLon <= 0){
theta = theta
}else{
theta = 360-theta
}
}
return(theta)}
rumbo <- function(lon, lat, dist){
vectorRumbo <- NULL
vectorRumbo[1] <- NA
for(i in 2:length(lon)){
rad <- pi/180
x2 <-  lon[i]*rad
y2 <-  lat[i]*rad
x1 <-  lon[i-1]*rad
y1 <-  lat[i-1]*rad
d1 <-  dist[i-1]
theta <- (180/pi)*acos((sin(y2)-sin(y1)*cos(d1))/(cos(y1)*sen(d1)))
diffLon <- x1-x2
if(diffLon <= 0){
theta = theta
}else{
theta = 360-theta
}
}
return(theta)
}
c3 <- rumbo(lon = base_barco$Lon, lat = base_barco$Lat, dist = base_barco$Dist_Emisiones)
rumbo <- function(lon, lat, dist){
vectorRumbo <- NULL
vectorRumbo[1] <- NA
for(i in 2:length(lon)){
rad <- pi/180
x2 <-  lon[i]*rad
y2 <-  lat[i]*rad
x1 <-  lon[i-1]*rad
y1 <-  lat[i-1]*rad
d1 <-  dist[i-1]
theta <- (180/pi)*acos((sin(y2)-sin(y1)*cos(d1))/(cos(y1)*sin(d1)))
diffLon <- x1-x2
if(diffLon <= 0){
theta = theta
}else{
theta = 360-theta
}
}
return(theta)
}
c3 <- rumbo(lon = base_barco$Lon, lat = base_barco$Lat, dist = base_barco$Dist_Emisiones)
c3
base_barco$Dist_Emisiones
rumbo <- function(lon, lat, dist){
vectorRumbo <- NULL
vectorRumbo[1] <- NA
for(i in 2:length(lon)){
rad <- pi/180
x2 <-  lon[i]*rad
y2 <-  lat[i]*rad
x1 <-  lon[i-1]*rad
y1 <-  lat[i-1]*rad
d1 <-  dist[i-1]
theta <- (180/pi)*acos((sin(y2)-sin(y1)*cos(d1))/(cos(y1)*sin(d1)))
diffLon <- x1-x2
if(diffLon <= 0){
theta = theta
}else{
theta = 360-theta
}
vectorRumbo <- rbind(vectorRumbo, theta)
}
return(vectorRumbo)
}
c3 <- rumbo(lon = base_barco$Lon, lat = base_barco$Lat, dist = base_barco$Dist_Emisiones)
c3
vectorRumbo <- NULL
length(lon)
rumbo <- function(lon, lat, dist){
vectorRumbo <- NULL
for(i in 2:length(lon)){
rad <- pi/180
x2 <-  lon[i]*rad
y2 <-  lat[i]*rad
x1 <-  lon[i-1]*rad
y1 <-  lat[i-1]*rad
d1 <-  dist[i-1]
theta <- (180/pi)*acos((sin(y2)-sin(y1)*cos(d1))/(cos(y1)*sin(d1)))
diffLon <- x1-x2
if(diffLon <= 0){
theta = theta
}else{
theta = 360-theta
}
vectorRumbo <- rbind(vectorRumbo, theta)
}
vectorRumbo[1] <- NA
return(vectorRumbo)
}
c3 <- rumbo(lon = base_barco$Lon, lat = base_barco$Lat, dist = base_barco$Dist_Emisiones)
c2 <- calculate_course(lon = base_barco$Lon,lat = base_barco$Lat)
cbind(c2, c3)
c3
rumbo <- function(lon, lat, dist){
vectorRumbo <- NULL
for(i in 2:length(lon)){
rad <- pi/180
x2 <-  lon[i]*rad
y2 <-  lat[i]*rad
x1 <-  lon[i-1]*rad
y1 <-  lat[i-1]*rad
d1 <-  dist[i-1]
theta <- (180/pi)*acos((sin(y2)-sin(y1)*cos(d1))/(cos(y1)*sin(d1)))
diffLon <- x1-x2
if(diffLon <= 0){
theta = theta
}else{
theta = 360-theta
}
vectorRumbo <- rbind(vectorRumbo, theta)
}
vectorRumbo[1] <- NA
vectorRumbo <- as.numeric(vectorRumbo)
return(vectorRumbo)
}
cbind(2,c3)
cbind(c2,c3)
c2 <- calculate_course(lon = base_barco$Lon,lat = base_barco$Lat)
cbind(c2,c3)
rumbo <- function(lon, lat, dist){
vectorRumbo <- NULL
for(i in 2:length(lon)){
rad <- pi/180
x2 <-  lon[i]*rad
y2 <-  lat[i]*rad
x1 <-  lon[i-1]*rad
y1 <-  lat[i-1]*rad
d1 <-  dist[i-1]
theta <- (180/pi)*acos((sin(y2)-sin(y1)*cos(d1))/(cos(y1)*sin(d1)))
diffLon <- x1-x2
# if(diffLon <= 0){
#   theta = theta
# }else{
#   theta = 360-theta
# }
vectorRumbo <- rbind(vectorRumbo, theta)
}
vectorRumbo[1] <- NA
vectorRumbo <- as.numeric(vectorRumbo)
return(vectorRumbo)
}
c2 <- calculate_course(lon = base_barco$Lon,lat = base_barco$Lat)
c3 <- rumbo(lon = base_barco$Lon, lat = base_barco$Lat, dist = base_barco$Dist_Emisiones)
cbind(c2,c3)
rumbo <- function(lon, lat, dist){
vectorRumbo <- NULL
for(i in 2:length(lon)){
rad <- pi/180
x2 <-  lon[i]*rad
y2 <-  lat[i]*rad
x1 <-  lon[i-1]*rad
y1 <-  lat[i-1]*rad
d1 <-  dist[i]
theta <- (180/pi)*acos((sin(y2)-sin(y1)*cos(d1))/(cos(y1)*sin(d1)))
diffLon <- x1-x2
if(diffLon <= 0){
theta = theta
}else{
theta = 360-theta
}
vectorRumbo <- rbind(vectorRumbo, theta)
}
vectorRumbo[1] <- NA
vectorRumbo <- as.numeric(vectorRumbo)
return(vectorRumbo)
}
c2 <- calculate_course(lon = base_barco$Lon,lat = base_barco$Lat)
c3 <- rumbo(lon = base_barco$Lon, lat = base_barco$Lat, dist = base_barco$Dist_Emisiones)
cbind(c2,c3)
rumbo <- function(lon, lat, dist){
vectorRumbo <- NULL
for(i in 2:length(lon)){
rad <- pi/180
x2 <-  lon[i]*rad
y2 <-  lat[i]*rad
x1 <-  lon[i-1]*rad
y1 <-  lat[i-1]*rad
d1 <-  dist[i]
theta <- (180/pi)*acos((sin(y2)-sin(y1)*cos(d1))/(cos(y1)*sin(d1)))
diffLon <- x1-x2
if(diffLon <= 0){
theta = theta
}else{
theta = 360-theta
}
vectorRumbo <- rbind(vectorRumbo, theta)
}
vectorRumbo[1] <- NA
vectorRumbo <- as.numeric(vectorRumbo)
return(vectorRumbo)
}
c2 <- calculate_course(lon = base_barco$Lon,lat = base_barco$Lat)
c3 <- rumbo(lon = base_barco$Lon, lat = base_barco$Lat, dist = base_barco$Dist_Emisiones)
cbind(c2,c3)
rumbo <- function(lon, lat, dist){
vectorRumbo <- NULL
for(i in 2:length(lon)){
rad <- pi/180
x2 <-  lon[i]*rad
y2 <-  lat[i]*rad
x1 <-  lon[i-1]*rad
y1 <-  lat[i-1]*rad
d1 <-  dist[i]
theta <- (180/pi)*acos((sin(y2)-sin(y1)*cos(d1))/(cos(y1)*sin(d1)))
diffLon <- x1-x2
# if(diffLon <= 0){
#   theta = theta
# }else{
#   theta = 360-theta
# }
vectorRumbo <- rbind(vectorRumbo, theta)
}
vectorRumbo[1] <- NA
vectorRumbo <- as.numeric(vectorRumbo)
return(vectorRumbo)
}
c2 <- calculate_course(lon = base_barco$Lon,lat = base_barco$Lat)
c3 <- rumbo(lon = base_barco$Lon, lat = base_barco$Lat, dist = base_barco$Dist_Emisiones)
cbind(c2,c3)
calculate_course
require(SISESATools)
estimateAngle <- function(x,y){
vec_angle <- NULL
for(z in 2:(length(x)-1)){
A <- matrix(NA,nrow = 2)
B <- matrix(NA,nrow = 2)
X1 <- as.matrix(x[c(z-1,z)])
Y1 <- as.matrix(y[c(z-1,z)])
X2 <- as.matrix(x[c(z,z+1)])
Y2 <- as.matrix(y[c(z,z+1)])
A[1] <- X1[1]-X1[2]
A[2] <- Y1[1]-Y1[2]
B[1] <- X2[2]-X2[1]
B[2] <- Y2[2]-Y2[1]
angle <- equationAngle(t(A),B)
vec_angle <- rbind(vec_angle,angle)
}
return(vec_angle)
}
equationAngle
equationAngle <- function(x,y){
dot.prod <- x%*%y
norm.x <- norm(x,type="2")
norm.y <- norm(y,type="2")
theta <- acos(dot.prod / (norm.x * norm.y))*180/pi
return(theta)
}
estimateAngle(x =base_barco$Lon,y = base_barco$Lat)
c4 <- estimateAngle(x =base_barco$Lon,y = base_barco$Lat)
cbind(c2,c3, c4)
c3
library(vmsR)
# registerDoSNOW(cl)
#
# cluster  = foreach(l = seq_along(listaBarco), .inorder = FALSE) %dopar% {
#   .getData2(listaBarco[[l]])
# }
# stopCluster(cl)
#
# for(w in seq_along(cluster)){
#   write.csv(cluster[[w]], file = paste0(directorio,"/",carpeta,"/",paste(cluster[[w]]$CODIGO[1], ".csv", sep = "")))
# }
require(vmsR)
base_barco <- data_vms[data_vms$Cod_Barco %in% unique(data_vms$Cod_Barco)[1],]
rumbo <- function(lon, lat, dist){
vector_rumbo <- NULL
for(i in 2:length(lon)){
rad <- pi/180
x2 <-  lon[i]*rad
y2 <-  lat[i]*rad
x1 <-  lon[i-1]*rad
y1 <-  lat[i-1]*ra
rum <- (90 - atan2(y2-y1,x2-x1) * 180/pi ) %% 360
vector_rumbo <- rbind(vector_rumbo, rum)
return(vector_rumbo)
}
c2 <- rumbo(lon = base_barco$Lon,lat = base_barco$Lat)
rumbo <- function(lon, lat, dist){
vector_rumbo <- NULL
for(i in 2:length(lon)){
rad <- pi/180
x2 <-  lon[i]*rad
y2 <-  lat[i]*rad
x1 <-  lon[i-1]*rad
y1 <-  lat[i-1]*ra
rum <- (90 - atan2(y2-y1,x2-x1) * 180/pi ) %% 360
vector_rumbo <- rbind(vector_rumbo, rum)
}
return(vector_rumbo)
}
c2 <- rumbo(lon = base_barco$Lon,lat = base_barco$Lat)
rumbo <- function(lon, lat){
vector_rumbo <- NULL
for(i in 2:length(lon)){
rad <- pi/180
x2 <-  lon[i]*rad
y2 <-  lat[i]*rad
x1 <-  lon[i-1]*rad
y1 <-  lat[i-1]*rad
rum <- (90 - atan2(y2-y1,x2-x1) * 180/pi ) %% 360
vector_rumbo <- rbind(vector_rumbo, rum)
}
return(vector_rumbo)
}
c2 <- rumbo(lon = base_barco$Lon,lat = base_barco$Lat)
c2
c1 <- calculate_course(lon = base_barco$Lon,lat = base_barco$Lat)
c1
cbind(c2, c1)
rumbo <- function(lon, lat){
vector_rumbo <- NULL
for(i in 2:length(lon)){
rad <- pi/180
x1 <-  lon[i]*rad
y1 <-  lat[i]*rad
x2 <-  lon[i-1]*rad
y2 <-  lat[i-1]*rad
rum <- (90 - atan2(y2-y1,x2-x1) * 180/pi ) %% 360
vector_rumbo <- rbind(vector_rumbo, rum)
}
return(vector_rumbo)
}
c2 <- rumbo(lon = base_barco$Lon,lat = base_barco$Lat)
c1 <- calculate_course(lon = base_barco$Lon,lat = base_barco$Lat)
cbind(c2, c1)
rumbo <- function(lon, lat){
vector_rumbo <- NULL
for(i in 2:length(lon)){
rad <- pi/180
x2 <-  lon[i]*rad
y2 <-  lat[i]*rad
x1 <-  lon[i-1]*rad
y1 <-  lat[i-1]*rad
rum <- (90 - atan2(y2-y1,x2-x1) * 180/pi ) %% 360
vector_rumbo <- rbind(vector_rumbo, rum)
}
return(vector_rumbo)
}
c1
rumbo <- function(lon, lat){
vector_rumbo <- NULL
for(i in 2:length(lon)){
rad <- pi/180
x2 <-  lon[i]*rad
y2 <-  lat[i]*rad
x1 <-  lon[i-1]*rad
y1 <-  lat[i-1]*rad
rum <- (90 - atan2(y2-y1,x2-x1) * 180/pi ) %% 360
vector_rumbo <- rbind(vector_rumbo, rum)
}
vector_rumbo <- c(NA, vector_rumbo)
return(vector_rumbo)
}
c2 <- rumbo(lon = base_barco$Lon,lat = base_barco$Lat)
c1 <- calculate_course(lon = base_barco$Lon,lat = base_barco$Lat)
cbind(c2, c1)
calculate_course
c2
c1
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
calculate_course <- function(lon,lat){
output <- NULL
for(i in 2:length(lon)){
rad <- pi/180
x2 <-  lon[i]*rad
y2 <-  lat[i]*rad
x1 <-  lon[i-1]*rad
y1 <-  lat[i-1]*rad
get_course <- (90 - atan2(y2-y1,x2-x1) * 180/pi ) %% 360
output <- rbind(output,get_course)
}
output <- c(NA, output)
# vectorRumbo <- NULL
# vectorRumbo[1] <- NA
# for(i in 2:length(lon)){
#   x2 <-  lon[i]
#   y2 <-  lat[i]
#   x1 <-  lon[i-1]
#   y1 <-  lat[i-1]
#   y   <- sin((x2-x1)*pi/180) * cos(y2*pi/180)
#   x   <- cos(y1*pi/180) * sin(y2*pi/180) - sin(y1*pi/180) * cos(y2*pi/180) * cos((x2-x1)*pi/180)
#   Rumbo <- atan2(y,x)*180/pi
#   Rumbo <- (Rumbo + 360)%%360
#   vectorRumbo <- rbind(vectorRumbo,Rumbo)
# }
# vectorRumbo <- as.vector(vectorRumbo)
# return(vectorRumbo)#, cambioRumbo = cambioRumbo))
return(vector_rumbo)
}
base_barco <- data_vms[data_vms$Cod_Barco %in% unique(data_vms$Cod_Barco)[1],]
#
# c2 <- rumbo(lon = base_barco$Lon,lat = base_barco$Lat)
c1 <- calculate_course(lon = base_barco$Lon,lat = base_barco$Lat)
#
# c2 <- rumbo(lon = base_barco$Lon,lat = base_barco$Lat)
c1 <- calculate_course(lon = base_barco$Lon,lat = base_barco$Lat)
calculate_course
calculate_course <- function(lon,lat){
output <- NULL
for(i in 2:length(lon)){
rad <- pi/180
x2 <-  lon[i]*rad
y2 <-  lat[i]*rad
x1 <-  lon[i-1]*rad
y1 <-  lat[i-1]*rad
get_course <- (90 - atan2(y2-y1,x2-x1) * 180/pi ) %% 360
output <- rbind(output,get_course)
}
output <- c(NA, output)
# vectorRumbo <- NULL
# vectorRumbo[1] <- NA
# for(i in 2:length(lon)){
#   x2 <-  lon[i]
#   y2 <-  lat[i]
#   x1 <-  lon[i-1]
#   y1 <-  lat[i-1]
#   y   <- sin((x2-x1)*pi/180) * cos(y2*pi/180)
#   x   <- cos(y1*pi/180) * sin(y2*pi/180) - sin(y1*pi/180) * cos(y2*pi/180) * cos((x2-x1)*pi/180)
#   Rumbo <- atan2(y,x)*180/pi
#   Rumbo <- (Rumbo + 360)%%360
#   vectorRumbo <- rbind(vectorRumbo,Rumbo)
# }
# vectorRumbo <- as.vector(vectorRumbo)
# return(vectorRumbo)#, cambioRumbo = cambioRumbo))
return(output)
}
#
# c2 <- rumbo(lon = base_barco$Lon,lat = base_barco$Lat)
c1 <- calculate_course(lon = base_barco$Lon,lat = base_barco$Lat)
c1
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
atan2
library(vmsR)
atan2
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
dist_ortodromica
library(vmsR)
library(vmsR)
library(vmsR)
processing_vms <- function(data, vessel = "Cod_Barco", harbor){
library(dplyr)
id_vessel <- lapply(split(data, data[[vessel]], drop = TRUE), function(data_vessel){
data_vessel     <- data_vessel[order(data_vessel$Date),]
eharbor         <- distance_harbor(data_vessel, harbor)
data_vessel$Harbor      <- eharbor$name_harbor
data_vessel$Dist_Harbor <- eharbor$dist_harbor
data_vessel$Time      <- NA
data_vessel$Time[2:(length(data_vessel[,1]))] <- (julian(data_vessel$Date[1:(length(data_vessel[,1])-1)])-julian(data_vessel$Date[2:(length(data_vessel[,1]))]))*24*(-1)
data_vessel$Dist_Emisiones <- NA
data_vessel$Dist_Emisiones[2:(length(data_vessel[,1]))] <- dist_ortodromica(data_vessel$Lon[1:(length(data_vessel[,1])-1)],data_vessel$Lat[1:(length(data_vessel[,1])-1)],data_vessel$Lon[2:length(data_vessel[,1])],data_vessel$Lat[2:length(data_vessel[,1])])
data_vessel$Vel_Cal <- NA
data_vessel$Vel_Cal <- data_vessel$Dist_Emisiones/data_vessel$Time
data_vessel$Vel_Cal[is.na(data_vessel$Vel_Cal)] <- 0
#data_vessel$change_speed_1  <- NA
#data_vessel$change_speed_1[-1]  <- diff(data_vessel$velocity_2)
#data_vessel$change_speed_2  <- NA
#data_vessel$change_speed_2[-length(data_vessel$change_speed_1)]  <- diff(data_vessel$velocity_2)
data_vessel$Course_Calc   <- NA
data_vessel$Course_Calc   <- calculate_course(lon = data_vessel$Lon, lat = data_vessel$Lat)
data_vessel$Change_Course_Calc[2:length(data_vessel$Course_Calc)] <- abs(data_vessel$Course_Calc[-1]-data_vessel$Course_Calc[-length(data_vessel$Course_Calc)])
#data_vessel$Change_Course_Calc <- apply(matrix(data_vessel$Rumbo_Calc), 1, change_course) # change_course function
as.data.frame(data_vessel)
})
id_vessel <- id_vessel %>% lapply(as.data.frame) %>% bind_rows()
# check_date < length(is.na(id_vessel$Date))
#
# if(exists(check_date)){
#   print(paste0("the date variable has ",check_date,"NA revise it"))
# }
return(id_vessel)
}
library(vmsR)
library(vmsR)
