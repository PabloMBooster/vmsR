length(data_vms_trip$Lon)
map_vms(data_vms_trip$Lon, data_vms_trip$Lat, data_vms_trip$Vel_Cal)
text(data_vms_trip$Lon, data_vms_trip$Lat,
labels = round(data_vms_trip$Rumbo_Calc), pos = sample(x = 1:4,size = 10), cex = 0.8)
#
sample(x = 1:4,size = 10)
sample(x = c(1:4),size = 10)
sample(x = 1,size = 10)
sample(x = 10)
sample(x = 4)
sample(x = 4, size = 10)
sample(x = 1,size = 1)
sample(x = 1,size = 2)
sample(x = 1:2,size = 2)
sample(x = 142,size = 2)
sample(x = 1:4,size = 2)
sample(x = 1:4,size = 3)
sample(x = 1:4,size = 4)
sample(x = 1:4,size = 5)
runif(n = 10,min = 1,max = 4)
round(runif(n = 10,min = 1,max = 4))
map_vms(data_vms_trip$Lon, data_vms_trip$Lat, data_vms_trip$Vel_Cal)
text(data_vms_trip$Lon, data_vms_trip$Lat,
labels = round(data_vms_trip$Rumbo_Calc), pos = round(runif(n = 10,min = 1,max = 4)), cex = 0.8)
data_vms_trip
data_vms_trip
round(data_vms_trip$Rumbo_Calc)
# DEMO --------------------------------------------------------------------
require(vmsR)
data_vms_proc <- processing_vms(data = data_vms_raw, vessel = "Cod_Barco", harbor = harbor)
data_vms_tray <- identify_trip(data = data_vms_pro, vharbor = 2, rmin = 6, hmax = 2.7)
data_vms_proc
data_vms_proc <- processing_vms(data = data_vms_raw, vessel = "Cod_Barco", harbor = harbor)
warnings()
head(data_vms_proc)
data_vms_tray <- identify_trip(data = data_vms_pro, vharbor = 2, rmin = 6, hmax = 2.7)
data_vms_tray <- identify_trip(data = data_vms_proc, vharbor = 2, rmin = 6, hmax = 2.7)
head(data_vms_tray)
ls(package::vmsR)
ls(package:::vmsR)
ls(packages:::vmsR)
ls()
ls("package:vmsR")
ls("package::vmsR")
ls("package:::vmsR")
ls("packages:::vmsR")
ls("packague:::vmsR")
ls(pattern = "O")
# DEMO --------------------------------------------------------------------
require(vmsR)
data(data_vms_raw)
data_vms_proc <- processing_vms(data = data_vms_raw, vessel = "Cod_Barco", harbor = harbor)
data_vms_tray <- identify_trip(data = data_vms_pro, vharbor = 2, rmin = 6, hmax = 2.7)
data_vms_trip    <- data_vms_tra[data_vms_tra$trip == data_vms_tra$trip[1],]
map_vms(data_vms_trip$Lon, data_vms_trip$Lat, data_vms_trip$Vel_Cal, )
text(data_vms_trip$Lon, data_vms_trip$Lat,
labels = round(data_vms_trip$Rumbo_Calc), pos = round(runif(n = 10,min = 1,max = 4)), cex = 0.8)
# DEMO --------------------------------------------------------------------
require(vmsR)
data_vms_proc <- processing_vms(data = data_vms_raw, vessel = "Cod_Barco", harbor = harbor)
data_vms_tray <- identify_trip(data = data_vms_pro, vharbor = 2, rmin = 6, hmax = 2.7)
data_vms_trip    <- data_vms_tra[data_vms_tra$trip == data_vms_tra$trip[1],]
head(data_vms_proc)
head(data_vms_raw)
data_vms_tray
data_vms_tray <- identify_trip(data = data_vms_proc, vharbor = 2, rmin = 6, hmax = 2.7)
# DEMO --------------------------------------------------------------------
require(vmsR)
data(data_vms_raw)
data_vms_proc <- processing_vms(data = data_vms_raw, vessel = "Cod_Barco", harbor = harbor)
data_vms_tray <- identify_trip(data = data_vms_proc, vharbor = 2, rmin = 6, hmax = 2.7)
data_vms_trip    <- data_vms_tra[data_vms_tra$trip == data_vms_tra$trip[1],]
# DEMO --------------------------------------------------------------------
require(vmsR)
head(data_vms_raw)
R.version
library(vmsR)
library(vmsR)
# DEMO --------------------------------------------------------------------
require(vmsR)
# data(data_vms_raw)
#
data_vms_proc <- processing_vms(data = data_vms_raw, vessel = "Cod_Barco", harbor = harbor)
data_vms_tray  <- identify_trajectories(data = data_vms_proc, vharbor = 2, rmin = 6*6, hmax = 2.7)
identify_trajectories <- function(data, vharbor = 2, rmin = 6, hmax = 2.7){
library(dplyr)
library(geoR)
id_viajes <- lapply(split(data, data$Cod_Barco, drop = TRUE), function(x){
y <- identify_trip(data = x, vharbor = vharbor, rmin = rmin, hmax = hmax)
as.data.frame(y)
})
id_viajes <- id_viajes %>% lapply(as.data.frame) %>% bind_rows()
id_viajes <- viaje_registro_compartido(id_viajes)
id_viajes <- eliminar_emisiones_erradas(id_viajes)
id_viajes$dist_costa <- estima_dc2(id_viajes$Lon, id_viajes$Lat)
return(id_viajes)
}
data_vms_tray  <- identify_trajectories(data = data_vms_proc, vharbor = 2, rmin = 6*6, hmax = 2.7)
identify_trajectories <- function(data, vharbor = 2, rmin = 6, hmax = 2.7){
library(dplyr)
#library(geoR)
library(rgeos)
id_viajes <- lapply(split(data, data$Cod_Barco, drop = TRUE), function(x){
y <- identify_trip(data = x, vharbor = vharbor, rmin = rmin, hmax = hmax)
as.data.frame(y)
})
id_viajes <- id_viajes %>% lapply(as.data.frame) %>% bind_rows()
id_viajes <- viaje_registro_compartido(id_viajes)
id_viajes <- eliminar_emisiones_erradas(id_viajes)
id_viajes$dist_costa <- estima_dc2(id_viajes$Lon, id_viajes$Lat)
return(id_viajes)
}
data_vms_tray  <- identify_trajectories(data = data_vms_proc, vharbor = 2, rmin = 6*6, hmax = 2.7)
data = data_vms_proc
library(dplyr)
#library(geoR)
library(rgeos)
id_viajes <- lapply(split(data, data$Cod_Barco, drop = TRUE), function(x){
y <- identify_trip(data = x, vharbor = vharbor, rmin = rmin, hmax = hmax)
as.data.frame(y)
})
vharbor = 2
rmin = 6
hmax = 2.7
library(dplyr)
#library(geoR)
library(rgeos)
id_viajes <- lapply(split(data, data$Cod_Barco, drop = TRUE), function(x){
y <- identify_trip(data = x, vharbor = vharbor, rmin = rmin, hmax = hmax)
as.data.frame(y)
})
head(id_viajes)
id_viajes <- viaje_registro_compartido(id_viajes)
head(id_viajes)
id_viajes <- eliminar_emisiones_erradas(id_viajes)
head(id_viajes)
id_viajes <- viaje_registro_compartido(id_viajes)
data <- id_viajes
limpiar_filas <- lapply(split(data, data$trip, drop = TRUE), function(x){
obs_time <- x$Time[is.na(x$Time)]
error_fila     <- rep(0, length(x$Lat))
error_fila[-1] <- abs(diff(round(x$Lat,1)))
# error en latitud
ubicar_error_lat <- which(error_fila > 0.5)
if(length(ubicar_error_lat) != 0){
x    <- x[-ubicar_error_lat,]
}
# error en time
ubicar_error_time <- which(round(x$Time,2) < 0.05)
if(length(ubicar_error_time) != 0){
x    <- x[-ubicar_error_time,]
}
if(x$Time[1] > 2.7){
x$Time[1] = 1
}
as.data.frame(x)
})
##******************************************************
x <- data[data$trip %in% data$trip[1], ]
data$trip[1]
head(data)
data$trip
str(data)
data = data_vms_proc
library(dplyr)
#library(geoR)
library(rgeos)
id_viajes <- lapply(split(data, data$Cod_Barco, drop = TRUE), function(x){
y <- identify_trip(data = x, vharbor = vharbor, rmin = rmin, hmax = hmax)
as.data.frame(y)
})
id_viajes <- id_viajes %>% lapply(as.data.frame) %>% bind_rows()
head(id_viajes)
id_viajes <- viaje_registro_compartido(data = id_viajes)
head(id_viajes)
id_viajes2 <- eliminar_emisiones_erradas(data = id_viajes)
id_viajes <- eliminar_emisiones_erradas(data = id_viajes)
id_viajes$dist_costa <- estima_dc2(id_viajes$Lon, id_viajes$Lat)
id_viajes$Lat
id_viajes$Lon
estima_dc2(lon = id_viajes$Lon, lat = id_viajes$Lat)
library(sp)
id_viajes$dist_costa <- estima_dc2(lon = id_viajes$Lon, lat = id_viajes$Lat)
# DEMO --------------------------------------------------------------------
require(vmsR)
head(data_vms_raw)
unique(data_vms_raw$nombre)
unique(data_vms_raw$Name_vessel)
head(data_vms_raw)
barcos <- unique(data_vms_raw$Name_vessel)
new_barcos <- rep("vessel",length(barcos))
new_barcos
new_barcos <- rep(paste0("vessel",1:length(barcos)),length(barcos))
new_barcos
new_barcos <- rep(paste0("vessel_",1:length(barcos)),length(barcos))
new_barcos
barcos
head(data_vms_raw)
extract_number
extract_number(data_vms_raw$Cod_Barco[1])
data_vms_raw$Cod_Barco[1]
extract_number(as.character(data_vms_raw$Cod_Barco[1]))
extract_number(as.character(data_vms_raw$Cod_Barco))
unique(as.character(data_vms_raw$Cod_Barco))
codigo <- data.frame(codigo = as.character(data_vms_raw$Cod_Barco))
N <- apply(codigo,1, extract_number)
N
N
head(cbind(N,codigo$codigo)50)
head(cbind(N,codigo$codigo),50)
head(cbind(N,codigo$codigo),1000)
data_vms_raw2 <- data_vms_raw
seq_along(unique(data_vms_raw2$Name_vessel))
data_vms_raw2Name_vessel <- NA
data_vms_raw2 <- data_vms_raw
data_vms_raw2Name_vessel <- NA
unique(data_vms_raw2$Name_vessel)
unique(data_vms_raw2$Name_vessel)[i]
data_vms_raw2$Name_vessel
i = 1
data_vms_raw2$Name_vessel[data_vms_raw$Name_vessel %in% unique(data_vms_raw$Name_vessel)[i]]
data_vms_raw2Name_vessel <- NA
data_vms_raw2$Name_vessel[data_vms_raw$Name_vessel %in% unique(data_vms_raw$Name_vessel)[i]]
data_vms_raw2$Name_vessel <- NA
data_vms_raw2$Name_vessel[data_vms_raw$Name_vessel %in% unique(data_vms_raw$Name_vessel)[i]]
new_barcos[i]
for(data_vms_raw$Name_vessel %in% seq_along(unique(data_vms_raw$Name_vessel))){
data_vms_raw2$Name_vessel[data_vms_raw$Name_vessel %in% unique(data_vms_raw$Name_vessel)[i]] <- new_barcos[i]
}
data_vms_raw$Name_vessel
seq_along(unique(data_vms_raw$Name_vessel))
data_vms_raw2$Name_vessel[which(data_vms_raw$Name_vessel %in% unique(data_vms_raw$Name_vessel)[i])]
data_vms_raw2 <- data_vms_raw
data_vms_raw2$Name_vessel <- NA
for(data_vms_raw$Name_vessel %in% seq_along(unique(data_vms_raw$Name_vessel))){
data_vms_raw2$Name_vessel[which(data_vms_raw$Name_vessel %in% unique(data_vms_raw$Name_vessel)[i])] <- new_barcos[i]
}
data_vms_raw2 <- data_vms_raw
data_vms_raw2$Name_vessel <- NA
for(i %in% seq_along(unique(data_vms_raw$Name_vessel))){
data_vms_raw2$Name_vessel[which(data_vms_raw$Name_vessel %in% unique(data_vms_raw$Name_vessel)[i])] <- new_barcos[i]
}
seq_along(unique(data_vms_raw$Name_vessel))
which(data_vms_raw$Name_vessel %in% unique(data_vms_raw$Name_vessel)[i])
data_vms_raw2$Name_vessel[which(data_vms_raw$Name_vessel %in% unique(data_vms_raw$Name_vessel)[i])]
new_barcos[i]
new_barcos
for(i %in% seq_along(unique(data_vms_raw$Name_vessel))){
data_vms_raw2$Name_vessel[which(data_vms_raw$Name_vessel %in% unique(data_vms_raw$Name_vessel)[i])] <- new_barcos[i]
}
seq_along(unique(data_vms_raw$Name_vessel))
seq_along(unique(data_vms_raw$Name_vessel))
unique(data_vms_raw$Name_vessel)
for(i %in% seq_along(unique(data_vms_raw$Name_vessel))){
data_vms_raw2$Name_vessel[which(data_vms_raw$Name_vessel %in% unique(data_vms_raw$Name_vessel)[i])] <- new_barcos[i]
}
for(i in seq_along(unique(data_vms_raw$Name_vessel))){
data_vms_raw2$Name_vessel[which(data_vms_raw$Name_vessel %in% unique(data_vms_raw$Name_vessel)[i])] <- new_barcos[i]
}
data_vms_raw2$Cod_Barco
codigo
N
(N+10)/5
N*10
N*10/5
table(N*10/5)
table(N*10/5)*table(N)
plot(table(N*10/5)*table(N))
plot(as.numeric(table(N*10/5))*as.numeric(table(N)))
plot(as.numeric(table(N*10/5)),as.numeric(table(N)))
data_vms_raw2$Cod_Barco <- N*10/5
head(data_vms_raw2)
write.csv(data_vms_raw2, "C:/Users/fenix/Desktop/clases VMS/data_vms_raw.csv")
# data(data_vms_raw)
#
data_vms_proc <- processing_vms(data = data_vms_raw, vessel = "Cod_Barco", harbor = harbor)
data_vms_tray <- identify_trip(data = data_vms_proc, vharbor = 2, rmin = 6, hmax = 2.7)
head(data_vms_tray)
# revisar la estima_dc2
# iniciar la presentación
data_vms_tray2  <- identify_trajectories(data = data_vms_proc, vharbor = 2, rmin = 6*6, hmax = 2.7)
data = data_vms_proc
vharbor = 2
rmin = 6*6
hmax = 2.7
library(dplyr)
#library(geoR)
library(rgeos)
library(sp)
id_viajes <- lapply(split(data, data$Cod_Barco, drop = TRUE), function(x){
y <- identify_trip(data = x, vharbor = vharbor, rmin = rmin, hmax = hmax)
as.data.frame(y)
})
id_viajes <- id_viajes %>% lapply(as.data.frame) %>% bind_rows()
id_viajes <- viaje_registro_compartido(data = id_viajes)
id_viajes <- eliminar_emisiones_erradas(data = id_viajes)
id_viajes$dist_costa <- estima_dc2(lon = id_viajes$Lon, lat = id_viajes$Lat)
lon = id_viajes$Lon
lat = id_viajes$Lat
temp = data.frame(lon = lon, lat = lat)
posiciones = temp[,c("lon", "lat")]
#- Convert VMS data to SpatialPolygons
spTa              = SpatialPoints(data.frame(posiciones))
proj4string(spTa) = CRS("+proj=longlat")
CRS("+proj=longlat")
spTa
proj4string(spTa)
proj4string(spTa) = CRS("+proj=longlat")
spTa
proj4string(spTa)
CRS("+proj=longlat")
head(spTa)
proj4string(spTa) = CRS("+proj=longlat")
require(sp)
require(rgeos)
proj4string(spTa) = CRS("+proj=longlat")
spTa.proj         = spTransform(spTa, CRS("+proj=utm +zone=18 ellips=WGS84"))
vmsR::estima_dc2
data_vms_proc$Lat
range(data_vms_proc$Lat)
range(data_vms_proc$Lon)
unique(data_vms_proc$Cod_Barco[data_vms_raw$Lat < -85])
unique(data_vms_proc$Cod_Barco[data_vms_raw$Lat > -70])
unique(data_vms_proc$Cod_Barco[data_vms_raw$Lon > -70])
hist(data_vms_proc$Cod_Barco[data_vms_raw$Lon)
hist(data_vms_raw$Lon)
hist(data_vms_raw$Lat)
unique(data_vms_raw$Cod_Barco[data_vms_raw$Lat > 10])
range(data_vms_raw$Lon)
quantile(data_vms_raw$Lon)
quantile(data_vms_raw$Lon, probs = c(0,,0.1,0.9,0.99))
quantile(data_vms_raw$Lon, probs = c(0,0.1,0.9,0.99))
quantile(data_vms_raw$Lon, probs = c(0,0.01,0.9,0.999))
quantile(data_vms_raw$Lon, probs = c(0,0.01,0.9,0.99))
table(data_vms_raw$Lat < 10)
data_vms_raw2 <- data_vms_raw[data_vms_raw$Lat < 10]
data_vms_raw2 <- data_vms_raw[data_vms_raw$Lat < 10,]
quantile(data_vms_raw2$Lon, probs = c(0,0.01,0.9,0.99))
quantile(data_vms_raw2$Lon, probs = c(0,0.01,0.9,0.999))
table(data_vms_raw$Lon > -90)
table(data_vms_raw$Lon > -100)
table(data_vms_raw$Lon < -70)
table(data_vms_raw$Lon < -65)
table(data_vms_raw$Lon < -50)
table(data_vms_raw$Lon < -60)
require(fenix)
mapa_peru
mapa_peru()
abline(v = -70)
table(data_vms_raw$Lon > -100)
table(data_vms_raw$Lon > -100 & data_vms_raw$Lon < -70)
data_vms_raw2 <- data_vms_raw2[data_vms_raw$Lon > -100 & data_vms_raw$Lon < -70,]
barcos <- unique(data_vms_raw$Name_vessel)
length(barcos)
barcos <- unique(data_vms_raw2$Name_vessel)
length(barcos)
require(vmsR)
length(unique(data_vms_raw$Cod_Barco))
data_vms_raw2 <- data_vms_raw[data_vms_raw$Lat < 10,]
data_vms_raw2 <- data_vms_raw2[data_vms_raw2$Lon > -100 & data_vms_raw2$Lon < -70,]
barcos <- unique(data_vms_raw2$Name_vessel)
length(barcos)
barcos <- unique(data_vms_raw2$Name_vessel)
new_barcos <- rep(paste0("vessel_",1:length(barcos)),length(barcos))
extract_number(as.character(data_vms_raw2$Cod_Barco))
codigo <- data.frame(codigo = as.character(data_vms_raw2$Cod_Barco))
N <- apply(codigo,1, extract_number)
N
head(data_vms_raw2)
data_vms_raw2$Name_vessel <- NA
for(i in seq_along(unique(data_vms_raw$Name_vessel))){
data_vms_raw2$Name_vessel[which(data_vms_raw$Name_vessel %in% unique(data_vms_raw$Name_vessel)[i])] <- new_barcos[i]
}
dim(data_vms_raw2)
dim(data_vms_raw)
data_vms_raw3 <- data_vms_raw2
data_vms_raw3$Name_vessel <- NA
for(i in seq_along(unique(data_vms_raw2$Name_vessel))){
data_vms_raw3$Name_vessel[which(data_vms_raw2$Name_vessel %in% unique(data_vms_raw2$Name_vessel)[i])] <- new_barcos[i]
}
dim(data_vms_raw3)
head(data_vms_raw3)
data_vms_proc <- processing_vms(data = data_vms_raw3, vessel = "Cod_Barco", harbor = harbor)
range(data_vms_proc$Lon)
# revisar la estima_dc2
# iniciar la presentación
data_vms_tray2  <- identify_trajectories(data = data_vms_proc, vharbor = 2, rmin = 6*6, hmax = 2.7)
head(data_vms_tray2)
data_vms_sele  <- seleccionar_vms(data = data_vms_tray)
data_vms_cala  <- identificar_cala(data = data_vms_sele) ## funciona para ambas frecuencias
head(data_vms_sele)
head(data_vms_sele)
head(data_vms_proc)
# cada 10 min
data_vms_cala  <- identificar_cala(data = data_vms_proc) ## funciona para ambas frecuencias
data_vms_proc <- processing_vms(data = data_vms_raw3, vessel = "Cod_Barco", harbor = harbor)
data_vms_tray <- identify_trajectories(data = data_vms_proc, vharbor = 2, rmin = 6, hmax = 2.7)
head(data_vms_tray)
# cada 10 min
data_vms_cala  <- identificar_cala(data = data_vms_tray) ## funciona para ambas frecuencias
dim(data_vms_tray)
data_vms_sele  <- seleccionar_vms(data = data_vms_tray)
dim(data_vms_sele)
dim(data_vms_tray)
dim(data_vms_proc)
dim(data_vms_tray)
data_vms_sele  <- seleccionar_vms(data = data_vms_tray)
dim(data_vms_sele)
data_vms_sele  <- seleccionar_vms(data = data_vms_tray)
dim(data_vms_tray)
dim(data_vms_sele)
dim(data_vms_tray)
data = data_vms_tray
head(data_vms_tray)
dim(data_vms_tray)
dim(data_vms_sele)
range(data_vms_tray$Time)
hist(data_vms_tray$Time)
hist(data_vms_tray$Time[data_vms_tray$Time < 3])
# cada 10 min
data_vms_cala  <- identificar_cala(data = data_vms_tray) ## funciona para ambas frecuencias
head(data_vms_cala)
harbor
# MAPA
vms_map
head(data_vms_cala)
dim(data_vms_cala)
data_vms_trip <- data_vms_tray[data_vms_tray$trip == 1,]
# MAPA
vmsR::map_vms(x = data_vms_trip$Lon,y = data_vms_trip$Lat,velocity = data_vms_trip$Vel_Cal)
head(data_vms_tray)
data_vms_trip <- data_vms_tray[data_vms_tray$trip == 1 & data_vms_tray$Name_vessel == data_vms_tray$Name_vessel[1],]
# MAPA
vmsR::map_vms(x = data_vms_trip$Lon,y = data_vms_trip$Lat,velocity = data_vms_trip$Vel_Cal)
data_vms_trip <- data_vms_tray[data_vms_tray$trip == 2 & data_vms_tray$Name_vessel == data_vms_tray$Name_vessel[1],]
# MAPA
vmsR::map_vms(x = data_vms_trip$Lon,y = data_vms_trip$Lat,velocity = data_vms_trip$Vel_Cal)
data_vms_trip <- data_vms_tray[data_vms_tray$trip == 3 & data_vms_tray$Name_vessel == data_vms_tray$Name_vessel[1],]
# MAPA
vmsR::map_vms(x = data_vms_trip$Lon,y = data_vms_trip$Lat,velocity = data_vms_trip$Vel_Cal)
data_vms_trip <- data_vms_tray[data_vms_tray$trip == 4 & data_vms_tray$Name_vessel == data_vms_tray$Name_vessel[1],]
# MAPA
vmsR::map_vms(x = data_vms_trip$Lon,y = data_vms_trip$Lat,velocity = data_vms_trip$Vel_Cal)
data_vms_trip <- data_vms_tray[data_vms_tray$trip == 5 & data_vms_tray$Name_vessel == data_vms_tray$Name_vessel[1],]
# MAPA
vmsR::map_vms(x = data_vms_trip$Lon,y = data_vms_trip$Lat,velocity = data_vms_trip$Vel_Cal)
data_vms_trip <- data_vms_tray[data_vms_tray$trip == 10 & data_vms_tray$Name_vessel == data_vms_tray$Name_vessel[1],]
vmsR::map_vms(x = data_vms_trip$Lon,y = data_vms_trip$Lat,velocity = data_vms_trip$Vel_Cal)
data_vms_trip <- data_vms_tray[data_vms_tray$trip == 11 & data_vms_tray$Name_vessel == data_vms_tray$Name_vessel[1],]
vmsR::map_vms(x = data_vms_trip$Lon,y = data_vms_trip$Lat,velocity = data_vms_trip$Vel_Cal)
data_vms_trip <- data_vms_tray[data_vms_tray$trip == 12 & data_vms_tray$Name_vessel == data_vms_tray$Name_vessel[1],]
vmsR::map_vms(x = data_vms_trip$Lon,y = data_vms_trip$Lat,velocity = data_vms_trip$Vel_Cal)
data_vms_trip <- data_vms_tray[data_vms_tray$trip == 13 & data_vms_tray$Name_vessel == data_vms_tray$Name_vessel[1],]
vmsR::map_vms(x = data_vms_trip$Lon,y = data_vms_trip$Lat,velocity = data_vms_trip$Vel_Cal)
data_vms_trip <- data_vms_tray[data_vms_tray$trip == 14 & data_vms_tray$Name_vessel == data_vms_tray$Name_vessel[1],]
vmsR::map_vms(x = data_vms_trip$Lon,y = data_vms_trip$Lat,velocity = data_vms_trip$Vel_Cal)
data_vms_trip <- data_vms_tray[data_vms_tray$trip == 15 & data_vms_tray$Name_vessel == data_vms_tray$Name_vessel[1],]
vmsR::map_vms(x = data_vms_trip$Lon,y = data_vms_trip$Lat,velocity = data_vms_trip$Vel_Cal)
data_vms_trip <- data_vms_tray[data_vms_tray$trip == 16 & data_vms_tray$Name_vessel == data_vms_tray$Name_vessel[1],]
vmsR::map_vms(x = data_vms_trip$Lon,y = data_vms_trip$Lat,velocity = data_vms_trip$Vel_Cal)
data_vms_trip <- data_vms_tray[data_vms_tray$trip == 17 & data_vms_tray$Name_vessel == data_vms_tray$Name_vessel[1],]
vmsR::map_vms(x = data_vms_trip$Lon,y = data_vms_trip$Lat,velocity = data_vms_trip$Vel_Cal)
data_vms_trip <- data_vms_tray[data_vms_tray$trip == 17 & data_vms_tray$Name_vessel == data_vms_tray$Name_vessel[1],]
vmsR::map_vms(x = data_vms_trip$Lon,y = data_vms_trip$Lat,velocity = data_vms_trip$Vel_Cal)
data_vms_trip <- data_vms_tray[data_vms_tray$trip == 16 & data_vms_tray$Name_vessel == data_vms_tray$Name_vessel[1],]
vmsR::map_vms(x = data_vms_trip$Lon,y = data_vms_trip$Lat,velocity = data_vms_trip$Vel_Cal)
write_vms <- function(data, directorio = NULL, file = NULL, ...){
if(is.null(file)){
file = paste0("resultados_",substring(Sys.time(),1,10))
}
if(!is.null(directorio)){
dir.create(file.path(directorio, file))
dir.create(file.path(directorio, file, "trayectorias"))
dir.create(file.path(directorio, file, "viajes"))
dir.create(file.path(directorio, file, "mapas"))
}else{
dir.create(file.path(getwd(), file))
dir.create(file.path(getwd(), file, "trayectorias"))
dir.create(file.path(getwd(), file, "viajes"))
dir.create(file.path(getwd(), file, "mapas"))
}
# dir.create(file.path(directorio, file,"/viajes/"))
# quebrar los datos y guardar .csv y mapas
id_vessel <- lapply(split(data, data$Cod_Barco, drop = TRUE), function(data_vessel){
write.csv(data_vessel, file = file.path(directorio, file,"/trayectorias/", paste0(data_vessel$Name_Vessel[1],".csv")))
data_vessel_viaje = por_viaje(data_vessel)
write.csv(data_vessel_viaje, file = file.path(directorio, file,"/viajes/", paste0(data_vessel$Name_Vessel[1],".csv")))
pdf(file.path(directorio, file, "mapas", paste0(data_vessel$Name_Vessel[1], ".pdf"))) #
for(i in sort(unique(data_vessel$trip))){
data_viaje = data_vessel[data_vessel$trip == i,]
map_vms(x = data_viaje$Lon, y = data_viaje$Lat, velocity = data_viaje$Vel_Cal)
legend("toprigh", legend = c(paste0("viaje = ", data_viaje$trip[1]),
paste0("v_max = ", round(max(data_viaje$Vel_Cal,na.rm = T),1), " knots"),
paste0("rec = ", round(sum(data_viaje$Dist_Emisiones, na.rm = T)), " millas"),
paste0("dur = ", round(sum(data_viaje$Time, na.rm = T),1), " horas"),
paste0("t_max = ", round(max(data_viaje$Time, na.rm = T),1)," horas"),
paste0("dc_max = ", round(max(data_viaje$dist_costa, na.rm = T))," millas")),
text.col = c(1,ifelse(max(data_viaje$Vel_Cal,na.rm = T) > 15,2,1),
1,1,ifelse(max(data_viaje$Time, na.rm = T) > 3,2,1),
ifelse(max(data_viaje$dist_costa, na.rm = T) < 10,2,1)), bg = "gray90", inset = .02, text.font = 3, cex = 0.7)
legend("bottomleft", legend = c("Velocidad \n (knots)", " [>= 8]", " [>= 5 y < 8]", " [> 2 y < 5]", " [<= 2]"),
lty = 1, lwd = 2, col = c(NA, 3, 5, 7, 2), bty = "n", pt.cex = 2)
points(x = data_viaje$Lon_calas, y = data_viaje$Lat_calas, pch = 8, cex = 1.2)
text(x = harbor[c(13,18,23,33,46,55,62,72,85),"lon"],
y = harbor[c(13,18,23,33,46,55,62,72,85),"lat"],
labels = as.character(harbor[c(13,18,23,33,46,55,62,72,85),"harbor2"]), col = 4)
title(main = paste0(data_viaje$Date[1], " - ", data_viaje$Date[length(data_viaje$Date)]))
}
dev.off()
})
}
library(vmsR)
