}
png("mapa.png")
map_vms(x = trip$Lon,y = trip$Lat,velocity = trip$Vel_Cal,legend_vel =T )
dev.off()
#
map_vms(x = trip$Lon,y = trip$Lat,velocity = trip$Vel_Cal,legend_vel =T )
library(vmsR)
ls(packages:vmsR)
ls(package:vmsR)
projet
estima_dc2
projet
require(vmsR)
data0 <- data_vms_raw[data_vms_raw$Cod_Barco %in% unique(data_vms_raw$Cod_Barco)[1],]
data0 <- data[data$Lat < 5,]
data0 <- data[,1:7]
data  <- processing_vms(data = data0, harbor = harbor)
data1 <- identify_trip(data = data, dharbor = 2,rmin = 6,vmax = 16,hmax = 2.3,vmin = 3)
head(data1)
head(data1)
projet
projet <- function(data){
xy <- data[c("Lon","Lat")]
data[c("LONGITUDE_M","LATITUDE_M")] <- coordinates(spTransform(SpatialPointsDataFrame(xy, data,
proj4string = CRS(proj4),
match.ID = TRUE),CRS(area)))
return(data)
}
projet.data <- projet(data1)
projet.data <- projet(data1, area = area, proj4)
area = "+init=epsg:24891" # similar
proj4 = "+proj=utm +south +zone=18 +ellps=WGS84" #opcional
projet.data <- projet(data1, area = area, proj4)
projet.data <- projet(data1, area = area, proj4 = proj4)
area = "+init=epsg:24891" # similar
proj4 = "+proj=utm +south +zone=18 +ellps=WGS84" #opcional
projet.data <- projet(data1, area = area, proj4 = proj4)
head(data1)
library(lubridate)
projet.data <- projet(data1, area = area, proj4 = proj4)
LONGITUDE_M
matriz.int.i$LONGITUDE_M
projet.data <- projet(data1, area = area, proj4 = proj4)
area = "+init=epsg:24891" # similar
proj4 = "+proj=utm +south +zone=18 +ellps=WGS84" #opcional
projet.data <- projet(data1, area = area, proj4 = proj4)
area = "+init=epsg:24891" # similar
proj4 = "+proj=utm +south +zone=18 +ellps=WGS84" #opcional
head(data1)
hist(data1$Lon)
hist(data1$Lat)
xy <- data1[c("Lon","Lat")]
xy
data1[c("LONGITUDE_M","LATITUDE_M")] <- coordinates(spTransform(SpatialPointsDataFrame(xy, data,
proj4string = CRS(proj4),
match.ID = TRUE),CRS(area)))
require(sp)
data1[c("LONGITUDE_M","LATITUDE_M")] <- coordinates(spTransform(SpatialPointsDataFrame(xy, data,
proj4string = CRS(proj4),
match.ID = TRUE),CRS(area)))
require(RandomFields)
data1[c("LONGITUDE_M","LATITUDE_M")] <- coordinates(spTransform(SpatialPointsDataFrame(xy, data,
proj4string = CRS(proj4),
match.ID = TRUE),CRS(area)))
require(sp)
require(rgdal)
data1[c("LONGITUDE_M","LATITUDE_M")] <- coordinates(spTransform(SpatialPointsDataFrame(xy, data,
proj4string = CRS(proj4),
match.ID = TRUE),CRS(area)))
projet <- function(data, proj4, area){
xy <- data1[c("Lon","Lat")]
data1[c("LONGITUDE_M","LATITUDE_M")] <- coordinates(spTransform(SpatialPointsDataFrame(xy, data,
proj4string = CRS(proj4),
match.ID = TRUE),CRS(area)))
return(data)
}
projet <- function(data, proj4, area){
xy <- data1[c("Lon","Lat")]
data1[c("LONGITUDE_M","LATITUDE_M")] <- coordinates(spTransform(SpatialPointsDataFrame(xy, data,
proj4string = CRS(proj4),
match.ID = TRUE),CRS(area)))
return(data)
}
plot(data1$Lon, data1$Lat)
projet.data <- projet(data1, area = area, proj4 = proj4)
head(projet.data)
projet <- function(data, proj4, area){
xy <- data[c("Lon","Lat")]
data[c("LONGITUDE_M","LATITUDE_M")] <- coordinates(spTransform(SpatialPointsDataFrame(xy, data,
proj4string = CRS(proj4),
match.ID = TRUE),CRS(area)))
return(data)
}
projet.data <- projet(data1, area = area, proj4 = proj4)
head(projet.data)
names(projet.data)
intervms <- function(data, scale.temporal = 60, Date = "Date", year = 2016){
data$Cod.Viaje.VMS <- paste0(data$Cod_Barco, "-",data$trip)
interpL <- lapply(split(data, data$Cod.Viaje.VMS, drop = TRUE),function(x){
print(x$Cod.Viaje.VMS[1])
t2 <- seq(from=floor_Date(x$Date[1],unit="hour"), ceiling_Date(x$Date[length(x$Date)],unit="hour"),by=60*scale.temporal) # that's because I'm doing it by hour
ini = which.min(t2 - x$Date[1] < -0.000000001) - 1
fin = which.max(t2 - x$Date[length(x$Date)] > -0.000000001)
t2  = t2[ini:fin]
#  if(length(t2) > 3){
interp <- lapply(t2[2:(length(t2)-1)],function(tempo){
dif.tiempo <- difftime(x$Date,tempo)
ind1 <- which(dif.tiempo<0)[sum(dif.tiempo<0)]
ind3 <- ind1+1
lon2 <- (x$LONGITUDE_M[ind3] - x$LONGITUDE_M[ind1])*as.numeric(difftime(tempo,x$Date[ind1],units = "hour"))/as.numeric(difftime(x$Date[ind3],x$Date[ind1],units="hours")) + x$LONGITUDE_M[ind1]
lat2 <- (x$LATITUDE_M[ind3] - x$LATITUDE_M[ind1])*as.numeric(difftime(tempo,x$Date[ind1],units = "hour"))/as.numeric(difftime(x$Date[ind3],x$Date[ind1],units="hours")) + x$LATITUDE_M[ind1]
ind.comp <- which.min(abs(difftime(x$Date,tempo,units = "mins")))
cbind.data.frame(lon2,lat2,Cod_Barco=x$Cod_Barco[ind.comp], Vel_VMS=x$Vel_VMS[ind.comp], Course=x$Course[ind.comp], id=x$id[ind.comp],
Harbor=x$Harbor[ind.comp], Dist_Harbor=x$Dist_Harbor[ind.comp],	Time=x$Time[ind.comp], Dist_Emisiones=x$Dist_Emisiones[ind.comp], Vel_Cal=x$Vel_Cal[ind.comp], Course_Calc=x$Course_Calc[ind.comp], Change_Course_Calc=x$Change_Course_Calc[ind.comp],
Cod.Viaje.VMS=x$Cod.Viaje.VMS[ind.comp], dist_costa=x$dist_costa[ind.comp], ind.t = as.numeric(abs(as.numeric(difftime(tempo,x$Date[ind.comp],units="hour")))>1),
Date.INTERP=tempo)
})
matriz.int.i <- interp %>% lapply(as.data.frame) %>% bind_rows()
#matriz.int <- do.call(rbind.data.frame,interp)
matriz.int.i = x[1,]
matriz.int.i$lon2 = matriz.int.i$LONGITUDE_M
matriz.int.i$lat2 = matriz.int.i$LATITUDE_M
matriz.int.i$Date.INTERP = t2[1]
matriz.int.i$ind.t = matriz.int$ind.t[1]
#matriz.int.i = matriz.int.i[,-which(names(matriz.int.i) %in% c("Fecha.Matlab","Clase.Emision"))]
matriz.int.f = x[length(x[,1]),]
matriz.int.f$lon2 = matriz.int.f$LONGITUDE_M
matriz.int.f$lat2 = matriz.int.f$LATITUDE_M
matriz.int.f$Date.INTERP = t2[length(t2)]
matriz.int.f$ind.t = matriz.int$ind.t[1]
#matriz.int.f = matriz.int.f[,-which(names(matriz.int.f) %in% c("Fecha.Matlab","Clase.Emision"))]
matriz.int = rbind(matriz.int.i[,names(matriz.int)], matriz.int, matriz.int.f[,names(matriz.int)])
#  }
})
interpL <- interpL %>% lapply(as.data.frame) %>% bind_rows()
#interpoL <- do.call(rbind.data.frame,interpL)
vms.interpol <- unprojet(interpoL)
#write.csv(vms.interpol , file=paste0('sisesat_',year,'-',scale.temporal,"_min",'.csv'))
#save(vms.interpol,file=paste0('sisesat_',year,'.RData'))
return(vms.interpol)
}
intervms <- function(data, scale.temporal = 60, Date = "Date"){
data$Cod.Viaje.VMS <- paste0(data$Cod_Barco, "-",data$trip)
interpL <- lapply(split(data, data$Cod.Viaje.VMS, drop = TRUE),function(x){
print(x$Cod.Viaje.VMS[1])
t2 <- seq(from=floor_Date(x$Date[1],unit="hour"), ceiling_Date(x$Date[length(x$Date)],unit="hour"),by=60*scale.temporal) # that's because I'm doing it by hour
ini = which.min(t2 - x$Date[1] < -0.000000001) - 1
fin = which.max(t2 - x$Date[length(x$Date)] > -0.000000001)
t2  = t2[ini:fin]
#  if(length(t2) > 3){
interp <- lapply(t2[2:(length(t2)-1)],function(tempo){
dif.tiempo <- difftime(x$Date,tempo)
ind1 <- which(dif.tiempo<0)[sum(dif.tiempo<0)]
ind3 <- ind1+1
lon2 <- (x$LONGITUDE_M[ind3] - x$LONGITUDE_M[ind1])*as.numeric(difftime(tempo,x$Date[ind1],units = "hour"))/as.numeric(difftime(x$Date[ind3],x$Date[ind1],units="hours")) + x$LONGITUDE_M[ind1]
lat2 <- (x$LATITUDE_M[ind3] - x$LATITUDE_M[ind1])*as.numeric(difftime(tempo,x$Date[ind1],units = "hour"))/as.numeric(difftime(x$Date[ind3],x$Date[ind1],units="hours")) + x$LATITUDE_M[ind1]
ind.comp <- which.min(abs(difftime(x$Date,tempo,units = "mins")))
cbind.data.frame(lon2,lat2,Cod_Barco=x$Cod_Barco[ind.comp], Vel_VMS=x$Vel_VMS[ind.comp], Course=x$Course[ind.comp], id=x$id[ind.comp],
Harbor=x$Harbor[ind.comp], Dist_Harbor=x$Dist_Harbor[ind.comp],	Time=x$Time[ind.comp], Dist_Emisiones=x$Dist_Emisiones[ind.comp], Vel_Cal=x$Vel_Cal[ind.comp], Course_Calc=x$Course_Calc[ind.comp], Change_Course_Calc=x$Change_Course_Calc[ind.comp],
Cod.Viaje.VMS=x$Cod.Viaje.VMS[ind.comp], dist_costa=x$dist_costa[ind.comp], ind.t = as.numeric(abs(as.numeric(difftime(tempo,x$Date[ind.comp],units="hour")))>1),
Date.INTERP=tempo)
})
matriz.int.i <- interp %>% lapply(as.data.frame) %>% bind_rows()
#matriz.int <- do.call(rbind.data.frame,interp)
matriz.int.i = x[1,]
matriz.int.i$lon2 = matriz.int.i$LONGITUDE_M
matriz.int.i$lat2 = matriz.int.i$LATITUDE_M
matriz.int.i$Date.INTERP = t2[1]
matriz.int.i$ind.t = matriz.int$ind.t[1]
#matriz.int.i = matriz.int.i[,-which(names(matriz.int.i) %in% c("Fecha.Matlab","Clase.Emision"))]
matriz.int.f = x[length(x[,1]),]
matriz.int.f$lon2 = matriz.int.f$LONGITUDE_M
matriz.int.f$lat2 = matriz.int.f$LATITUDE_M
matriz.int.f$Date.INTERP = t2[length(t2)]
matriz.int.f$ind.t = matriz.int$ind.t[1]
#matriz.int.f = matriz.int.f[,-which(names(matriz.int.f) %in% c("Fecha.Matlab","Clase.Emision"))]
matriz.int = rbind(matriz.int.i[,names(matriz.int)], matriz.int, matriz.int.f[,names(matriz.int)])
#  }
})
interpL <- interpL %>% lapply(as.data.frame) %>% bind_rows()
#interpoL <- do.call(rbind.data.frame,interpL)
vms.interpol <- unprojet(interpoL)
#write.csv(vms.interpol , file=paste0('sisesat_',year,'-',scale.temporal,"_min",'.csv'))
#save(vms.interpol,file=paste0('sisesat_',year,'.RData'))
return(vms.interpol)
}
oo = intervms(data = projet.data, scale.temporal = 60, DATE = "DATE", year = 2016)
intervms <- function(data, scale.temporal = 60, Date = "Date"){
data$Cod.Viaje.VMS <- paste0(data$Cod_Barco, "-",data$trip)
interpL <- lapply(split(data, data$Cod.Viaje.VMS, drop = TRUE),function(x){
print(x$Cod.Viaje.VMS[1])
t2 <- seq(from=floor_Date(x$Date[1],unit="hour"), ceiling_Date(x$Date[length(x$Date)],unit="hour"),by=60*scale.temporal) # that's because I'm doing it by hour
ini = which.min(t2 - x$Date[1] < -0.000000001) - 1
fin = which.max(t2 - x$Date[length(x$Date)] > -0.000000001)
t2  = t2[ini:fin]
#  if(length(t2) > 3){
interp <- lapply(t2[2:(length(t2)-1)],function(tempo){
dif.tiempo <- difftime(x$Date,tempo)
ind1 <- which(dif.tiempo<0)[sum(dif.tiempo<0)]
ind3 <- ind1+1
lon2 <- (x$LONGITUDE_M[ind3] - x$LONGITUDE_M[ind1])*as.numeric(difftime(tempo,x$Date[ind1],units = "hour"))/as.numeric(difftime(x$Date[ind3],x$Date[ind1],units="hours")) + x$LONGITUDE_M[ind1]
lat2 <- (x$LATITUDE_M[ind3] - x$LATITUDE_M[ind1])*as.numeric(difftime(tempo,x$Date[ind1],units = "hour"))/as.numeric(difftime(x$Date[ind3],x$Date[ind1],units="hours")) + x$LATITUDE_M[ind1]
ind.comp <- which.min(abs(difftime(x$Date,tempo,units = "mins")))
cbind.data.frame(lon2,lat2,Cod_Barco=x$Cod_Barco[ind.comp], Vel_VMS=x$Vel_VMS[ind.comp], Course=x$Course[ind.comp], id=x$id[ind.comp],
Harbor=x$Harbor[ind.comp], Dist_Harbor=x$Dist_Harbor[ind.comp],	Time=x$Time[ind.comp], Dist_Emisiones=x$Dist_Emisiones[ind.comp], Vel_Cal=x$Vel_Cal[ind.comp], Course_Calc=x$Course_Calc[ind.comp], Change_Course_Calc=x$Change_Course_Calc[ind.comp],
Cod.Viaje.VMS=x$Cod.Viaje.VMS[ind.comp], dist_costa=x$dist_costa[ind.comp], ind.t = as.numeric(abs(as.numeric(difftime(tempo,x$Date[ind.comp],units="hour")))>1),
Date.INTERP=tempo)
})
matriz.int.i <- interp %>% lapply(as.data.frame) %>% bind_rows()
#matriz.int <- do.call(rbind.data.frame,interp)
matriz.int.i = x[1,]
matriz.int.i$lon2 = matriz.int.i$LONGITUDE_M
matriz.int.i$lat2 = matriz.int.i$LATITUDE_M
matriz.int.i$Date.INTERP = t2[1]
matriz.int.i$ind.t = matriz.int$ind.t[1]
#matriz.int.i = matriz.int.i[,-which(names(matriz.int.i) %in% c("Fecha.Matlab","Clase.Emision"))]
matriz.int.f = x[length(x[,1]),]
matriz.int.f$lon2 = matriz.int.f$LONGITUDE_M
matriz.int.f$lat2 = matriz.int.f$LATITUDE_M
matriz.int.f$Date.INTERP = t2[length(t2)]
matriz.int.f$ind.t = matriz.int$ind.t[1]
#matriz.int.f = matriz.int.f[,-which(names(matriz.int.f) %in% c("Fecha.Matlab","Clase.Emision"))]
matriz.int = rbind(matriz.int.i[,names(matriz.int)], matriz.int, matriz.int.f[,names(matriz.int)])
#  }
})
interpL <- interpL %>% lapply(as.data.frame) %>% bind_rows()
#interpoL <- do.call(rbind.data.frame,interpL)
vms.interpol <- unprojet(interpoL)
#write.csv(vms.interpol , file=paste0('sisesat_',year,'-',scale.temporal,"_min",'.csv'))
#save(vms.interpol,file=paste0('sisesat_',year,'.RData'))
return(vms.interpol)
}
oo = intervms(data = projet.data, scale.temporal = 60, DATE = "Date")
oo = intervms(data = projet.data, scale.temporal = 60, Date = "Date")
require(lubridate)
oo = intervms(data = projet.data, scale.temporal = 60, Date = "Date")
require(lubridate)
oo = intervms(data = projet.data, scale.temporal = 60, Date = "Date")
intervms <- function(data, scale.temporal = 60, Date = "Date"){
library(lubridate)
data$Cod.Viaje.VMS <- paste0(data$Cod_Barco, "-",data$trip)
interpL <- lapply(split(data, data$Cod.Viaje.VMS, drop = TRUE),function(x){
print(x$Cod.Viaje.VMS[1])
t2 <- seq(from=floor_Date(x$Date[1],unit="hour"), ceiling_Date(x$Date[length(x$Date)],unit="hour"),by=60*scale.temporal) # that's because I'm doing it by hour
ini = which.min(t2 - x$Date[1] < -0.000000001) - 1
fin = which.max(t2 - x$Date[length(x$Date)] > -0.000000001)
t2  = t2[ini:fin]
#  if(length(t2) > 3){
interp <- lapply(t2[2:(length(t2)-1)],function(tempo){
dif.tiempo <- difftime(x$Date,tempo)
ind1 <- which(dif.tiempo<0)[sum(dif.tiempo<0)]
ind3 <- ind1+1
lon2 <- (x$LONGITUDE_M[ind3] - x$LONGITUDE_M[ind1])*as.numeric(difftime(tempo,x$Date[ind1],units = "hour"))/as.numeric(difftime(x$Date[ind3],x$Date[ind1],units="hours")) + x$LONGITUDE_M[ind1]
lat2 <- (x$LATITUDE_M[ind3] - x$LATITUDE_M[ind1])*as.numeric(difftime(tempo,x$Date[ind1],units = "hour"))/as.numeric(difftime(x$Date[ind3],x$Date[ind1],units="hours")) + x$LATITUDE_M[ind1]
ind.comp <- which.min(abs(difftime(x$Date,tempo,units = "mins")))
cbind.data.frame(lon2,lat2,Cod_Barco=x$Cod_Barco[ind.comp], Vel_VMS=x$Vel_VMS[ind.comp], Course=x$Course[ind.comp], id=x$id[ind.comp],
Harbor=x$Harbor[ind.comp], Dist_Harbor=x$Dist_Harbor[ind.comp],	Time=x$Time[ind.comp], Dist_Emisiones=x$Dist_Emisiones[ind.comp], Vel_Cal=x$Vel_Cal[ind.comp], Course_Calc=x$Course_Calc[ind.comp], Change_Course_Calc=x$Change_Course_Calc[ind.comp],
Cod.Viaje.VMS=x$Cod.Viaje.VMS[ind.comp], dist_costa=x$dist_costa[ind.comp], ind.t = as.numeric(abs(as.numeric(difftime(tempo,x$Date[ind.comp],units="hour")))>1),
Date.INTERP=tempo)
})
matriz.int.i <- interp %>% lapply(as.data.frame) %>% bind_rows()
#matriz.int <- do.call(rbind.data.frame,interp)
matriz.int.i = x[1,]
matriz.int.i$lon2 = matriz.int.i$LONGITUDE_M
matriz.int.i$lat2 = matriz.int.i$LATITUDE_M
matriz.int.i$Date.INTERP = t2[1]
matriz.int.i$ind.t = matriz.int$ind.t[1]
#matriz.int.i = matriz.int.i[,-which(names(matriz.int.i) %in% c("Fecha.Matlab","Clase.Emision"))]
matriz.int.f = x[length(x[,1]),]
matriz.int.f$lon2 = matriz.int.f$LONGITUDE_M
matriz.int.f$lat2 = matriz.int.f$LATITUDE_M
matriz.int.f$Date.INTERP = t2[length(t2)]
matriz.int.f$ind.t = matriz.int$ind.t[1]
#matriz.int.f = matriz.int.f[,-which(names(matriz.int.f) %in% c("Fecha.Matlab","Clase.Emision"))]
matriz.int = rbind(matriz.int.i[,names(matriz.int)], matriz.int, matriz.int.f[,names(matriz.int)])
#  }
})
interpL <- interpL %>% lapply(as.data.frame) %>% bind_rows()
#interpoL <- do.call(rbind.data.frame,interpL)
vms.interpol <- unprojet(interpoL)
#write.csv(vms.interpol , file=paste0('sisesat_',year,'-',scale.temporal,"_min",'.csv'))
#save(vms.interpol,file=paste0('sisesat_',year,'.RData'))
return(vms.interpol)
}
oo = intervms(data = projet.data, scale.temporal = 60, Date = "Date")
intervms <- function(data, scale.temporal = 60, Date = "Date"){
library(lubridate)
data$Cod.Viaje.VMS <- paste0(data$Cod_Barco, "-",data$trip)
interpL <- lapply(split(data, data$Cod.Viaje.VMS, drop = TRUE),function(x){
print(x$Cod.Viaje.VMS[1])
t2 <- seq(from=floor_date(x$Date[1],unit="hour"), ceiling_Date(x$Date[length(x$Date)],unit="hour"),by=60*scale.temporal) # that's because I'm doing it by hour
ini = which.min(t2 - x$Date[1] < -0.000000001) - 1
fin = which.max(t2 - x$Date[length(x$Date)] > -0.000000001)
t2  = t2[ini:fin]
#  if(length(t2) > 3){
interp <- lapply(t2[2:(length(t2)-1)],function(tempo){
dif.tiempo <- difftime(x$Date,tempo)
ind1 <- which(dif.tiempo<0)[sum(dif.tiempo<0)]
ind3 <- ind1+1
lon2 <- (x$LONGITUDE_M[ind3] - x$LONGITUDE_M[ind1])*as.numeric(difftime(tempo,x$Date[ind1],units = "hour"))/as.numeric(difftime(x$Date[ind3],x$Date[ind1],units="hours")) + x$LONGITUDE_M[ind1]
lat2 <- (x$LATITUDE_M[ind3] - x$LATITUDE_M[ind1])*as.numeric(difftime(tempo,x$Date[ind1],units = "hour"))/as.numeric(difftime(x$Date[ind3],x$Date[ind1],units="hours")) + x$LATITUDE_M[ind1]
ind.comp <- which.min(abs(difftime(x$Date,tempo,units = "mins")))
cbind.data.frame(lon2,lat2,Cod_Barco=x$Cod_Barco[ind.comp], Vel_VMS=x$Vel_VMS[ind.comp], Course=x$Course[ind.comp], id=x$id[ind.comp],
Harbor=x$Harbor[ind.comp], Dist_Harbor=x$Dist_Harbor[ind.comp],	Time=x$Time[ind.comp], Dist_Emisiones=x$Dist_Emisiones[ind.comp], Vel_Cal=x$Vel_Cal[ind.comp], Course_Calc=x$Course_Calc[ind.comp], Change_Course_Calc=x$Change_Course_Calc[ind.comp],
Cod.Viaje.VMS=x$Cod.Viaje.VMS[ind.comp], dist_costa=x$dist_costa[ind.comp], ind.t = as.numeric(abs(as.numeric(difftime(tempo,x$Date[ind.comp],units="hour")))>1),
Date.INTERP=tempo)
})
matriz.int.i <- interp %>% lapply(as.data.frame) %>% bind_rows()
#matriz.int <- do.call(rbind.data.frame,interp)
matriz.int.i = x[1,]
matriz.int.i$lon2 = matriz.int.i$LONGITUDE_M
matriz.int.i$lat2 = matriz.int.i$LATITUDE_M
matriz.int.i$Date.INTERP = t2[1]
matriz.int.i$ind.t = matriz.int$ind.t[1]
#matriz.int.i = matriz.int.i[,-which(names(matriz.int.i) %in% c("Fecha.Matlab","Clase.Emision"))]
matriz.int.f = x[length(x[,1]),]
matriz.int.f$lon2 = matriz.int.f$LONGITUDE_M
matriz.int.f$lat2 = matriz.int.f$LATITUDE_M
matriz.int.f$Date.INTERP = t2[length(t2)]
matriz.int.f$ind.t = matriz.int$ind.t[1]
#matriz.int.f = matriz.int.f[,-which(names(matriz.int.f) %in% c("Fecha.Matlab","Clase.Emision"))]
matriz.int = rbind(matriz.int.i[,names(matriz.int)], matriz.int, matriz.int.f[,names(matriz.int)])
#  }
})
interpL <- interpL %>% lapply(as.data.frame) %>% bind_rows()
#interpoL <- do.call(rbind.data.frame,interpL)
vms.interpol <- unprojet(interpoL)
#write.csv(vms.interpol , file=paste0('sisesat_',year,'-',scale.temporal,"_min",'.csv'))
#save(vms.interpol,file=paste0('sisesat_',year,'.RData'))
return(vms.interpol)
}
oo = intervms(data = projet.data, scale.temporal = 60, Date = "Date")
intervms <- function(data, scale.temporal = 60, Date = "Date"){
library(lubridate)
data$Cod.Viaje.VMS <- paste0(data$Cod_Barco, "-",data$trip)
interpL <- lapply(split(data, data$Cod.Viaje.VMS, drop = TRUE),function(x){
print(x$Cod.Viaje.VMS[1])
t2 <- seq(from=floor_date(x$Date[1],unit="hour"), ceiling_date(x$Date[length(x$Date)],unit="hour"),by=60*scale.temporal) # that's because I'm doing it by hour
ini = which.min(t2 - x$Date[1] < -0.000000001) - 1
fin = which.max(t2 - x$Date[length(x$Date)] > -0.000000001)
t2  = t2[ini:fin]
#  if(length(t2) > 3){
interp <- lapply(t2[2:(length(t2)-1)],function(tempo){
dif.tiempo <- difftime(x$Date,tempo)
ind1 <- which(dif.tiempo<0)[sum(dif.tiempo<0)]
ind3 <- ind1+1
lon2 <- (x$LONGITUDE_M[ind3] - x$LONGITUDE_M[ind1])*as.numeric(difftime(tempo,x$Date[ind1],units = "hour"))/as.numeric(difftime(x$Date[ind3],x$Date[ind1],units="hours")) + x$LONGITUDE_M[ind1]
lat2 <- (x$LATITUDE_M[ind3] - x$LATITUDE_M[ind1])*as.numeric(difftime(tempo,x$Date[ind1],units = "hour"))/as.numeric(difftime(x$Date[ind3],x$Date[ind1],units="hours")) + x$LATITUDE_M[ind1]
ind.comp <- which.min(abs(difftime(x$Date,tempo,units = "mins")))
cbind.data.frame(lon2,lat2,Cod_Barco=x$Cod_Barco[ind.comp], Vel_VMS=x$Vel_VMS[ind.comp], Course=x$Course[ind.comp], id=x$id[ind.comp],
Harbor=x$Harbor[ind.comp], Dist_Harbor=x$Dist_Harbor[ind.comp],	Time=x$Time[ind.comp], Dist_Emisiones=x$Dist_Emisiones[ind.comp], Vel_Cal=x$Vel_Cal[ind.comp], Course_Calc=x$Course_Calc[ind.comp], Change_Course_Calc=x$Change_Course_Calc[ind.comp],
Cod.Viaje.VMS=x$Cod.Viaje.VMS[ind.comp], dist_costa=x$dist_costa[ind.comp], ind.t = as.numeric(abs(as.numeric(difftime(tempo,x$Date[ind.comp],units="hour")))>1),
Date.INTERP=tempo)
})
matriz.int.i <- interp %>% lapply(as.data.frame) %>% bind_rows()
#matriz.int <- do.call(rbind.data.frame,interp)
matriz.int.i = x[1,]
matriz.int.i$lon2 = matriz.int.i$LONGITUDE_M
matriz.int.i$lat2 = matriz.int.i$LATITUDE_M
matriz.int.i$Date.INTERP = t2[1]
matriz.int.i$ind.t = matriz.int$ind.t[1]
#matriz.int.i = matriz.int.i[,-which(names(matriz.int.i) %in% c("Fecha.Matlab","Clase.Emision"))]
matriz.int.f = x[length(x[,1]),]
matriz.int.f$lon2 = matriz.int.f$LONGITUDE_M
matriz.int.f$lat2 = matriz.int.f$LATITUDE_M
matriz.int.f$Date.INTERP = t2[length(t2)]
matriz.int.f$ind.t = matriz.int$ind.t[1]
#matriz.int.f = matriz.int.f[,-which(names(matriz.int.f) %in% c("Fecha.Matlab","Clase.Emision"))]
matriz.int = rbind(matriz.int.i[,names(matriz.int)], matriz.int, matriz.int.f[,names(matriz.int)])
#  }
})
interpL <- interpL %>% lapply(as.data.frame) %>% bind_rows()
#interpoL <- do.call(rbind.data.frame,interpL)
vms.interpol <- unprojet(interpoL)
#write.csv(vms.interpol , file=paste0('sisesat_',year,'-',scale.temporal,"_min",'.csv'))
#save(vms.interpol,file=paste0('sisesat_',year,'.RData'))
return(vms.interpol)
}
oo = intervms(data = projet.data, scale.temporal = 60, Date = "Date")
intervms <- function(data, scale.temporal = 60, Date = "Date"){
library(lubridate)
data$Cod.Viaje.VMS <- paste0(data$Cod_Barco, "-",data$trip)
interpL <- lapply(split(data, data$Cod.Viaje.VMS, drop = TRUE),function(x){
print(x$Cod.Viaje.VMS[1])
t2 <- seq(from=floor_date(x$Date[1],unit="hour"), ceiling_date(x$Date[length(x$Date)],unit="hour"),by=60*scale.temporal) # that's because I'm doing it by hour
ini = which.min(t2 - x$Date[1] < -0.000000001) - 1
fin = which.max(t2 - x$Date[length(x$Date)] > -0.000000001)
t2  = t2[ini:fin]
#  if(length(t2) > 3){
interp <- lapply(t2[2:(length(t2)-1)],function(tempo){
dif.tiempo <- difftime(x$Date,tempo)
ind1 <- which(dif.tiempo<0)[sum(dif.tiempo<0)]
ind3 <- ind1+1
lon2 <- (x$LONGITUDE_M[ind3] - x$LONGITUDE_M[ind1])*as.numeric(difftime(tempo,x$Date[ind1],units = "hour"))/as.numeric(difftime(x$Date[ind3],x$Date[ind1],units="hours")) + x$LONGITUDE_M[ind1]
lat2 <- (x$LATITUDE_M[ind3] - x$LATITUDE_M[ind1])*as.numeric(difftime(tempo,x$Date[ind1],units = "hour"))/as.numeric(difftime(x$Date[ind3],x$Date[ind1],units="hours")) + x$LATITUDE_M[ind1]
ind.comp <- which.min(abs(difftime(x$Date,tempo,units = "mins")))
cbind.data.frame(lon2,lat2,Cod_Barco=x$Cod_Barco[ind.comp], Vel_VMS=x$Vel_VMS[ind.comp], Course=x$Course[ind.comp], id=x$id[ind.comp],
Harbor=x$Harbor[ind.comp], Dist_Harbor=x$Dist_Harbor[ind.comp],	Time=x$Time[ind.comp], Dist_Emisiones=x$Dist_Emisiones[ind.comp], Vel_Cal=x$Vel_Cal[ind.comp], Course_Calc=x$Course_Calc[ind.comp], Change_Course_Calc=x$Change_Course_Calc[ind.comp],
Cod.Viaje.VMS=x$Cod.Viaje.VMS[ind.comp], dist_costa=x$dist_costa[ind.comp], ind.t = as.numeric(abs(as.numeric(difftime(tempo,x$Date[ind.comp],units="hour")))>1),
Date.INTERP=tempo)
})
matriz.int <- interp %>% lapply(as.data.frame) %>% bind_rows()
#matriz.int <- do.call(rbind.data.frame,interp)
matriz.int.i = x[1,]
matriz.int.i$lon2 = matriz.int.i$LONGITUDE_M
matriz.int.i$lat2 = matriz.int.i$LATITUDE_M
matriz.int.i$Date.INTERP = t2[1]
matriz.int.i$ind.t = matriz.int$ind.t[1]
#matriz.int.i = matriz.int.i[,-which(names(matriz.int.i) %in% c("Fecha.Matlab","Clase.Emision"))]
matriz.int.f = x[length(x[,1]),]
matriz.int.f$lon2 = matriz.int.f$LONGITUDE_M
matriz.int.f$lat2 = matriz.int.f$LATITUDE_M
matriz.int.f$Date.INTERP = t2[length(t2)]
matriz.int.f$ind.t = matriz.int$ind.t[1]
#matriz.int.f = matriz.int.f[,-which(names(matriz.int.f) %in% c("Fecha.Matlab","Clase.Emision"))]
matriz.int = rbind(matriz.int.i[,names(matriz.int)], matriz.int, matriz.int.f[,names(matriz.int)])
#  }
})
interpL <- interpL %>% lapply(as.data.frame) %>% bind_rows()
#interpoL <- do.call(rbind.data.frame,interpL)
vms.interpol <- unprojet(interpoL)
#write.csv(vms.interpol , file=paste0('sisesat_',year,'-',scale.temporal,"_min",'.csv'))
#save(vms.interpol,file=paste0('sisesat_',year,'.RData'))
return(vms.interpol)
}
oo = intervms(data = projet.data, scale.temporal = 60, Date = "Date")
unprojet <- function(data){
xy <- data[c("lon2","lat2")]
data[c("LONGITUDE","LATITUDE")] <- coordinates(spTransform(SpatialPointsDataFrame(xy,data,
proj4string = CRS(area)),
CRS(proj4)))
return(data)
}
oo = intervms(data = projet.data, scale.temporal = 60, Date = "Date")
intervms <- function(data, scale.temporal = 60, Date = "Date"){
library(lubridate)
data$Cod.Viaje.VMS <- paste0(data$Cod_Barco, "-",data$trip)
interpL <- lapply(split(data, data$Cod.Viaje.VMS, drop = TRUE),function(x){
print(x$Cod.Viaje.VMS[1])
t2 <- seq(from=floor_date(x$Date[1],unit="hour"), ceiling_date(x$Date[length(x$Date)],unit="hour"),by=60*scale.temporal) # that's because I'm doing it by hour
ini = which.min(t2 - x$Date[1] < -0.000000001) - 1
fin = which.max(t2 - x$Date[length(x$Date)] > -0.000000001)
t2  = t2[ini:fin]
#  if(length(t2) > 3){
interp <- lapply(t2[2:(length(t2)-1)],function(tempo){
dif.tiempo <- difftime(x$Date,tempo)
ind1 <- which(dif.tiempo<0)[sum(dif.tiempo<0)]
ind3 <- ind1+1
lon2 <- (x$LONGITUDE_M[ind3] - x$LONGITUDE_M[ind1])*as.numeric(difftime(tempo,x$Date[ind1],units = "hour"))/as.numeric(difftime(x$Date[ind3],x$Date[ind1],units="hours")) + x$LONGITUDE_M[ind1]
lat2 <- (x$LATITUDE_M[ind3] - x$LATITUDE_M[ind1])*as.numeric(difftime(tempo,x$Date[ind1],units = "hour"))/as.numeric(difftime(x$Date[ind3],x$Date[ind1],units="hours")) + x$LATITUDE_M[ind1]
ind.comp <- which.min(abs(difftime(x$Date,tempo,units = "mins")))
cbind.data.frame(lon2,lat2,Cod_Barco=x$Cod_Barco[ind.comp], Vel_VMS=x$Vel_VMS[ind.comp], Course=x$Course[ind.comp], id=x$id[ind.comp],
Harbor=x$Harbor[ind.comp], Dist_Harbor=x$Dist_Harbor[ind.comp],	Time=x$Time[ind.comp], Dist_Emisiones=x$Dist_Emisiones[ind.comp], Vel_Cal=x$Vel_Cal[ind.comp], Course_Calc=x$Course_Calc[ind.comp], Change_Course_Calc=x$Change_Course_Calc[ind.comp],
Cod.Viaje.VMS=x$Cod.Viaje.VMS[ind.comp], dist_costa=x$dist_costa[ind.comp], ind.t = as.numeric(abs(as.numeric(difftime(tempo,x$Date[ind.comp],units="hour")))>1),
Date.INTERP=tempo)
})
matriz.int <- interp %>% lapply(as.data.frame) %>% bind_rows()
#matriz.int <- do.call(rbind.data.frame,interp)
matriz.int.i = x[1,]
matriz.int.i$lon2 = matriz.int.i$LONGITUDE_M
matriz.int.i$lat2 = matriz.int.i$LATITUDE_M
matriz.int.i$Date.INTERP = t2[1]
matriz.int.i$ind.t = matriz.int$ind.t[1]
#matriz.int.i = matriz.int.i[,-which(names(matriz.int.i) %in% c("Fecha.Matlab","Clase.Emision"))]
matriz.int.f = x[length(x[,1]),]
matriz.int.f$lon2 = matriz.int.f$LONGITUDE_M
matriz.int.f$lat2 = matriz.int.f$LATITUDE_M
matriz.int.f$Date.INTERP = t2[length(t2)]
matriz.int.f$ind.t = matriz.int$ind.t[1]
#matriz.int.f = matriz.int.f[,-which(names(matriz.int.f) %in% c("Fecha.Matlab","Clase.Emision"))]
matriz.int = rbind(matriz.int.i[,names(matriz.int)], matriz.int, matriz.int.f[,names(matriz.int)])
#  }
})
interpoL <- interpL %>% lapply(as.data.frame) %>% bind_rows()
#interpoL <- do.call(rbind.data.frame,interpL)
vms.interpol <- unprojet(interpoL)
#write.csv(vms.interpol , file=paste0('sisesat_',year,'-',scale.temporal,"_min",'.csv'))
#save(vms.interpol,file=paste0('sisesat_',year,'.RData'))
return(vms.interpol)
}
oo = intervms(data = projet.data, scale.temporal = 60, Date = "Date")
head(oo)
dim(oo)
dim(projet.data)
projet <- function(data, proj4, area){
xy <- data[c("Lon","Lat")]
data[c("LONGITUDE_M","LATITUDE_M")] <- coordinates(spTransform(SpatialPointsDataFrame(xy, data,
proj4string = CRS(proj4),
match.ID = TRUE),CRS(area)))
return(data)
}
unprojet <- function(data){
xy <- data[c("lon2","lat2")]
data[c("LONGITUDE","LATITUDE")] <- coordinates(spTransform(SpatialPointsDataFrame(xy,data,
proj4string = CRS(area)),
CRS(proj4)))
return(data)
}
head(oo)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
library(vmsR)
shape
